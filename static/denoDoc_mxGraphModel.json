[
  {
    "kind": "class",
    "name": "mxGraphModel",
    "location": {
      "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Extends `<mxEventSource>` to implement a graph model. The graph model acts as a wrapper around the cells which are in charge of storing the actual graph datastructure. The model acts as a transactional wrapper with event notification for all changes, whereas the cells contain the atomic operations for updating the actual datastructure."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Constructs a new graph model. If no root is specified then a new root `<mxCell>` with a default layer is created.",
            "tags": [
              {
                "kind": "param",
                "name": "root",
                "doc": "`<mxCell>` that represents the root cell."
              }
            ]
          },
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "root",
              "optional": false
            }
          ],
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 10,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Holds the root cell, which in turn contains the cells that represent the layers of the diagram as child cells. That is, the actual elements of the diagram are supposed to live in the third generation of cells and below."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "root",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 15,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Maps from Ids to cells."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cells",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 20,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges should automatically be moved into the nearest common ancestor of their terminals. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "maintainEdgeParent",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 25,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if relative edge parents should be ignored for finding the nearest common ancestors of an edge's terminals. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ignoreRelativeEdgeParent",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 30,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the model should automatically create Ids for new cells. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createIds",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 35,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Defines the prefix of new Ids. Default is `an` empty string."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "prefix",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 40,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Defines the postfix of new Ids. Default is `an` empty string."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "postfix",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 45,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the next Id to be created. Initial value is 0."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nextId",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 50,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the changes for the current transaction. If the transaction is closed then a new object is created for this variable using `<createUndoableEdit>`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "currentEdit",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 55,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Counter for the depth of nested transactions. Each call to `<beginUpdate>` will increment this number and each call to `<endUpdate>` will decrement it. When the counter reaches 0, the transaction is closed and the respective events are fired. Initial value is 0."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateLevel",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 60,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "True if the program flow is currently inside endUpdate."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "endingUpdate",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 65,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Sets a new root using `<createRoot>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clear",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 70,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<createIds>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCreateIds",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 75,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<createIds>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCreateIds",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 80,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new root cell with a default layer (child 0)."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createRoot",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 85,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells in this model."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 90,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the number of cells in the model."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellCount",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 95,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxCell>` for the specified Id or null if no cell can be found for the given Id.",
            "tags": [
              {
                "kind": "param",
                "name": "id",
                "doc": "A string representing the Id of the cell."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "id",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 101,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells from the given array where the given filter function returns true."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "filterCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 106,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all descendants of the given cell and the cell itself in an array.",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` whose descendants should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getDescendants",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 112,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Visits all cells recursively and applies the specified filter function to each cell. If the function returns true then the cell is added to the resulting array. The parent and result paramters are optional. If parent is not specified then the recursion starts at `<root>`.\n\nThe following example extracts all vertices from a given model: \n```\nvar filter = function(cell)\n{\n  return model.isVertex(cell);\n}\nvar vertices = model.filterDescendants(filter);\n```",
            "tags": [
              {
                "kind": "param",
                "name": "filter",
                "doc": "JavaScript function that takes an `<mxCell>` as an argument and returns a boolean."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "Optional `<mxCell>` that is used as the root of the recursion."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "filterDescendants",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "filter",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": true
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 128,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the root of the model or the topmost parent of the given cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "Optional `<mxCell>` that specifies the child."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getRoot",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": true
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 134,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the `<root>` of the model using `<mxRootChange>` and adds the change to the current transaction. This resets all datastructures in the model and is the preferred way of clearing an existing model. Returns the new root.\n```\nvar root = new mxCell();\nroot.insert(new mxCell());\nmodel.setRoot(root);\n```",
            "tags": [
              {
                "kind": "param",
                "name": "root",
                "doc": "`<mxCell>` that specifies the new root."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setRoot",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "root",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 145,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to change the root of the model and update the internal datastructures, such as `<cells>` and `<nextId>`. Returns the previous root.",
            "tags": [
              {
                "kind": "param",
                "name": "root",
                "doc": "`<mxCell>` that specifies the new root."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "rootChanged",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "root",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 151,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is the root of the model and a non-null value.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the possible root."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isRoot",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 157,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if `<isRoot>` returns true for the parent of the given cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the possible layer."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isLayer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 163,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given parent is an ancestor of the given child. Note  returns true if child == parent.",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that specifies the parent."
              },
              {
                "kind": "param",
                "name": "child",
                "doc": "`<mxCell>` that specifies the child."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isAncestor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "child",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 170,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the model contains the given `<mxCell>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that specifies the cell."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "contains",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 176,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the parent of the given cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose parent should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getParent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 182,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds the specified child to the parent at the given index using `<mxChildChange>` and adds the change to the current transaction. If no index is specified then the child is appended to the parent's array of children. Returns the inserted child.",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that specifies the parent to contain the child."
              },
              {
                "kind": "param",
                "name": "child",
                "doc": "`<mxCell>` that specifies the child to be inserted."
              },
              {
                "kind": "param",
                "name": "index",
                "doc": "Optional integer that specifies the index of the child."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "child",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "index",
                "optional": true
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 190,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to update `<cells>` when a cell has been added. This implementation resolves collisions by creating new Ids. To change the ID of a cell after it was inserted into the model, use the following code:\n\n(code delete model.cells[cell.getId()]; cell.setId(newId); model.cells[cell.getId()] = cell;\n\nIf the change of the ID should be part of the command history, then the cell should be removed from the model and a clone with the new ID should be reinserted into the model instead.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that specifies the cell that has been added."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellAdded",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 200,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook method to create an Id for the specified cell. This implementation concatenates `<prefix>`, id and `<postfix>` to create the Id and increments `<nextId>`. The cell is ignored by this implementation, but can be used in overridden methods to prefix the Ids with eg. the cell type.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to create the Id for."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createId",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 206,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Updates the parent for all edges that are connected to cell or one of its descendants using `<updateEdgeParent>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateEdgeParents",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 211,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to update the parent of the specified `<mxCell>` to the nearest-common-ancestor of its two terminals.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that specifies the edge."
              },
              {
                "kind": "param",
                "name": "root",
                "doc": "`<mxCell>` that represents the current root of the model."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateEdgeParent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "root",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 218,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the absolute, accumulated origin for the children inside the given parent as an `<mxPoint>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getOrigin",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 223,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the nearest common ancestor for the specified cells.",
            "tags": [
              {
                "kind": "param",
                "name": "cell1",
                "doc": "`<mxCell>` that specifies the first cell in the tree."
              },
              {
                "kind": "param",
                "name": "cell2",
                "doc": "`<mxCell>` that specifies the second cell in the tree."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getNearestCommonAncestor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell1",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cell2",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 230,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the specified cell from the model using `<mxChildChange>` and adds the change to the current transaction. This operation will remove the cell and all of its children from the model. Returns the removed cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that should be removed."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "remove",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 236,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to update `<cells>` when a cell has been removed.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that specifies the cell that has been removed."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellRemoved",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 242,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to update the parent of a cell using `<mxCell.insert>` on the parent and return the previous parent.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to update the parent for."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that specifies the new parent of the cell."
              },
              {
                "kind": "param",
                "name": "index",
                "doc": "Optional integer that defines the index of the child in the parent's child array."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "parentForCellChanged",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "index",
                "optional": true
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 250,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the number of children in the given cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose number of children should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildCount",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 256,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the child of the given `<mxCell>` at the given index.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the parent."
              },
              {
                "kind": "param",
                "name": "index",
                "doc": "Integer that specifies the index of the child to be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildAt",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "index",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 263,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all children of the given `<mxCell>` as an array of `<mxCells>`. The return value should be only be read.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` the represents the parent."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildren",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 269,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the child vertices of the given parent.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose child vertices should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildVertices",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 275,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the child edges of the given parent.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose child edges should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 281,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the children of the given cell that are vertices and/or edges depending on the arguments.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` the represents the parent."
              },
              {
                "kind": "param",
                "name": "vertices",
                "doc": "Boolean indicating if child vertices should be returned. Default is `false`."
              },
              {
                "kind": "param",
                "name": "edges",
                "doc": "Boolean indicating if child edges should be returned. Default is `false`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "vertices",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "edges",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 289,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the source or target `<mxCell>` of the given edge depending on the value of the boolean parameter.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that specifies the edge."
              },
              {
                "kind": "param",
                "name": "isSource",
                "doc": "Boolean indicating which end of the edge should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTerminal",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "isSource",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 296,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the source or target terminal of the given `<mxCell>` using `<mxTerminalChange>` and adds the change to the current transaction. This implementation updates the parent of the edge using `<updateEdgeParent>` if required.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that specifies the edge."
              },
              {
                "kind": "param",
                "name": "terminal",
                "doc": "`<mxCell>` that specifies the new terminal."
              },
              {
                "kind": "param",
                "name": "isSource",
                "doc": "Boolean indicating if the terminal is the new source or target terminal of the edge."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTerminal",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "isSource",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 304,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the source and target `<mxCell>` of the given `<mxCell>` in a single transaction using `<setTerminal>` for each end of the edge.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that specifies the edge."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "`<mxCell>` that specifies the new source terminal."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that specifies the new target terminal."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTerminals",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 312,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner helper function to update the terminal of the edge using `<mxCell.insertEdge>` and return the previous terminal.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that specifies the edge to be updated."
              },
              {
                "kind": "param",
                "name": "terminal",
                "doc": "`<mxCell>` that specifies the new terminal."
              },
              {
                "kind": "param",
                "name": "isSource",
                "doc": "Boolean indicating if the terminal is the new source or target terminal of the edge."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "terminalForCellChanged",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "isSource",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 320,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the number of distinct edges connected to the given cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the vertex."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEdgeCount",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 326,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the edge of cell at the given index.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that specifies the vertex."
              },
              {
                "kind": "param",
                "name": "index",
                "doc": "Integer that specifies the index of the edge to return."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEdgeAt",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "index",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 333,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the number of incoming or outgoing edges, ignoring the given edge.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose edge count should be returned."
              },
              {
                "kind": "param",
                "name": "outgoing",
                "doc": "Boolean that specifies if the number of outgoing or incoming edges should be returned."
              },
              {
                "kind": "param",
                "name": "ignoredEdge",
                "doc": "`<mxCell>` that represents an edge to be ignored."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getDirectedEdgeCount",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "outgoing",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoredEdge",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 341,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all edges of the given cell without loops.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose edges should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getConnections",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 347,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the incoming edges of the given cell without loops.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose incoming edges should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getIncomingEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 353,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the outgoing edges of the given cell without loops.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose outgoing edges should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getOutgoingEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 359,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all distinct edges connected to this cell as a new array of `<mxCells>`. If at least one of incoming or outgoing is true, then loops are ignored, otherwise if both are false, then all edges connected to the given cell are returned including loops.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that specifies the cell."
              },
              {
                "kind": "param",
                "name": "incoming",
                "doc": "Optional boolean that specifies if incoming edges should be returned. Default is `true`."
              },
              {
                "kind": "param",
                "name": "outgoing",
                "doc": "Optional boolean that specifies if outgoing edges should be returned. Default is `true`."
              },
              {
                "kind": "param",
                "name": "includeLoops",
                "doc": "Optional boolean that specifies if loops should be returned. Default is `true`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "incoming",
                "optional": true
              },
              {
                "kind": "identifier",
                "name": "outgoing",
                "optional": true
              },
              {
                "kind": "identifier",
                "name": "includeLoops",
                "optional": true
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 368,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all edges between the given source and target pair. If directed is true, then only edges from the source to the target are returned, otherwise, all edges between the two cells are returned.",
            "tags": [
              {
                "kind": "param",
                "name": "source",
                "doc": "`<mxCell>` that defines the source terminal of the edge to be returned."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that defines the target terminal of the edge to be returned."
              },
              {
                "kind": "param",
                "name": "directed",
                "doc": "Optional boolean that specifies if the direction of the edge should be taken into account. Default is `false`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEdgesBetween",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "directed",
                "optional": true
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 376,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all opposite vertices wrt terminal for the given edges, only returning sources and/or targets as specified. The result is returned as an array of `<mxCells>`.",
            "tags": [
              {
                "kind": "param",
                "name": "edges",
                "doc": "Array of `<mxCells>` that contain the edges to be examined."
              },
              {
                "kind": "param",
                "name": "terminal",
                "doc": "`<mxCell>` that specifies the known end of the edges."
              },
              {
                "kind": "param",
                "name": "sources",
                "doc": "Boolean that specifies if source terminals should be contained in the result. Default is `true`."
              },
              {
                "kind": "param",
                "name": "targets",
                "doc": "Boolean that specifies if target terminals should be contained in the result. Default is `true`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getOpposites",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edges",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "sources",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "targets",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 385,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the topmost cells of the hierarchy in an array that contains no descendants for each `<mxCell>` that it contains. Duplicates should be removed in the cells array to improve performance.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose topmost ancestors should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTopmostCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 391,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is a vertex.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the possible vertex."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isVertex",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 397,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is an edge.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the possible edge."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEdge",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 403,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given `<mxCell>` is connectable. If `<edgesConnectable>` is false, then this function returns false for all edges else it returns the return value of `<mxCell.isConnectable>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose connectable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isConnectable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 409,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the user object of the given `<mxCell>` using `<mxCell.getValue>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose user object should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getValue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 415,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the user object of then given `<mxCell>` using `<mxValueChange>` and adds the change to the current transaction.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose user object should be changed."
              },
              {
                "kind": "param",
                "name": "value",
                "doc": "Object that defines the new user object."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setValue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 422,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to update the user object of the given `<mxCell>` using `<mxCell.valueChanged>` and return the previous value, that is, the return value of `<mxCell.valueChanged>`.\n\nTo change a specific attribute in an XML node, the following code can be used.\n```\ngraph.getModel().valueForCellChanged = function(cell, value)\n{\n  var previous = cell.value.getAttribute('label');\n  cell.value.setAttribute('label', value);\n  \n  return previous;\n};\n```"
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "valueForCellChanged",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 438,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxGeometry>` of the given `<mxCell>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose geometry should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getGeometry",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 444,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the `<mxGeometry>` of the given `<mxCell>`. The actual update of the cell is carried out in `<geometryForCellChanged>`. The `<mxGeometryChange>` action is used to encapsulate the change.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose geometry should be changed."
              },
              {
                "kind": "param",
                "name": "geometry",
                "doc": "`<mxGeometry>` that defines the new geometry."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setGeometry",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "geometry",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 451,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to update the `<mxGeometry>` of the given `<mxCell>` using `<mxCell.setGeometry>` and return the previous `<mxGeometry>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "geometryForCellChanged",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 456,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the style of the given `<mxCell>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose style should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getStyle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 462,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the style of the given `<mxCell>` using `<mxStyleChange>` and adds the change to the current transaction.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose style should be changed."
              },
              {
                "kind": "param",
                "name": "style",
                "doc": "String of the form [stylename;|key=value;] to specify the new cell style."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setStyle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "style",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 469,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to update the style of the given `<mxCell>` using `<mxCell.setStyle>` and return the previous style.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that specifies the cell to be updated."
              },
              {
                "kind": "param",
                "name": "style",
                "doc": "String of the form [stylename;|key=value;] to specify the new cell style."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "styleForCellChanged",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "style",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 476,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given `<mxCell>` is collapsed.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose collapsed state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCollapsed",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 482,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the collapsed state of the given `<mxCell>` using `<mxCollapseChange>` and adds the change to the current transaction.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose collapsed state should be changed."
              },
              {
                "kind": "param",
                "name": "collapsed",
                "doc": "Boolean that specifies the new collpased state."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCollapsed",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "collapsed",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 489,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to update the collapsed state of the given `<mxCell>` using `<mxCell.setCollapsed>` and return the previous collapsed state.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that specifies the cell to be updated."
              },
              {
                "kind": "param",
                "name": "collapsed",
                "doc": "Boolean that specifies the new collpased state."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "collapsedStateForCellChanged",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "collapsed",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 496,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given `<mxCell>` is visible.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose visible state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isVisible",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 502,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the visible state of the given `<mxCell>` using `<mxVisibleChange>` and adds the change to the current transaction.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose visible state should be changed."
              },
              {
                "kind": "param",
                "name": "visible",
                "doc": "Boolean that specifies the new visible state."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setVisible",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "visible",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 509,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner callback to update the visible state of the given `<mxCell>` using `<mxCell.setCollapsed>` and return the previous visible state.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that specifies the cell to be updated."
              },
              {
                "kind": "param",
                "name": "visible",
                "doc": "Boolean that specifies the new visible state."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "visibleStateForCellChanged",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "visible",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 516,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Executes the given edit and fires events if required. The edit object requires an execute function which is invoked. The edit is added to the `<currentEdit>` between `<beginUpdate>` and `<endUpdate>` calls, so that events will be fired if this execute is an individual transaction, that is, if no previous `<beginUpdate>` calls have been made without calling `<endUpdate>`. This implementation fires an `<execute>` event before executing the given change.",
            "tags": [
              {
                "kind": "param",
                "name": "change",
                "doc": "Object that described the change."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "execute",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "change",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 522,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Increments the `<updateLevel>` by one. The event notification is queued until `<updateLevel>` reaches 0 by use of `<endUpdate>`.\n\nAll changes on `<mxGraphModel>` are transactional, that is, they are executed in a single undoable change on the model (without transaction isolation). Therefore, if you want to combine any number of changes into a single undoable change, you should group any two or more API calls that modify the graph model between `<beginUpdate>` and `<endUpdate>` calls as shown here:\n```\nvar model = graph.getModel();\nvar parent = graph.getDefaultParent();\nvar index = model.getChildCount(parent);\nmodel.beginUpdate();\ntry\n{\n  model.add(parent, v1, index);\n  model.add(parent, v2, index+1);\n}\nfinally\n{\n  model.endUpdate();\n}\n```\nOf course there is a shortcut for appending a sequence of cells into the default parent:\n```\ngraph.addCells([v1, v2]).\n```"
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "beginUpdate",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 548,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Decrements the `<updateLevel>` by one and fires an `<undo>` event if the `<updateLevel>` reaches 0. This function indirectly fires a `<change>` event by invoking the notify function on the `<currentEdit>` und then creates a new `<currentEdit>` using `<createUndoableEdit>`.\n\nThe `<undo>` event is fired only once per edit, whereas the `<change>` event is fired whenever the notify function is invoked, that is, on undo and redo of the edit."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "endUpdate",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 555,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new `<mxUndoableEdit>` that implements the notify function to fire a `<change>` and `<notify>` event through the `<mxUndoableEdit>`'s source.",
            "tags": [
              {
                "kind": "param",
                "name": "significant",
                "doc": "Optional boolean that specifies if the edit to be created is significant. Default is `true`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createUndoableEdit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "significant",
                "optional": true
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 561,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Merges the children of the given cell into the given target cell inside this model. All cells are cloned unless there is a corresponding cell in the model with the same id, in which case the source cell is ignored and all edges are connected to the corresponding cell in this model. Edges are considered to have no identity and are always cloned unless the cloneAllEdges flag is set to false, in which case edges with the same id in the target model are reconnected to reflect the terminals of the source edges."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mergeChildren",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 566,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Clones the children of the source cell into the given target cell in this model and adds an entry to the mapping that maps from the source cell to the target cell with the same id or the clone of the source cell that was inserted into this model."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mergeChildren",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 571,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an array that represents the set (no duplicates) of all parents for the given array of cells.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of cells whose parents should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getParents",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 577,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a deep clone of the given `<mxCell>` (including the children) which is created using `<cloneCells>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to be cloned."
              },
              {
                "kind": "param",
                "name": "includeChildren",
                "doc": "Optional boolean indicating if the cells should be cloned with all descendants. Default is `true`."
              },
              {
                "kind": "param",
                "name": "identical",
                "doc": "Optional boolean to keep the identity of cloned cells. Default is `false`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cloneCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeChildren",
                "optional": true
              },
              {
                "kind": "identifier",
                "name": "identical",
                "optional": true
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 585,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an array of clones for the given array of `<mxCells>`. Depending on the value of includeChildren, a deep clone is created for each cell. Connections are restored based if the corresponding cell is contained in the passed in array.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCell>` to be cloned."
              },
              {
                "kind": "param",
                "name": "includeChildren",
                "doc": "Optional boolean indicating if the cells should be cloned with all descendants. Default is `true`."
              },
              {
                "kind": "param",
                "name": "mapping",
                "doc": "Optional mapping for existing clones."
              },
              {
                "kind": "param",
                "name": "identical",
                "doc": "Optional boolean to keep the cell IDs. Default is `false`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cloneCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeChildren",
                "optional": true
              },
              {
                "kind": "identifier",
                "name": "mapping",
                "optional": true
              },
              {
                "kind": "identifier",
                "name": "identical",
                "optional": true
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 594,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner helper method for cloning cells recursively."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cloneCellImpl",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 599,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook for cloning the cell. This returns cell.clone() or any possible exceptions."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellCloned",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 604,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Inner helper method for restoring the connections in a network of cloned cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "restoreClone",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraphModel.ts",
            "line": 609,
            "col": 2
          }
        }
      ],
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  }
]