[
  {
    "kind": "class",
    "name": "mxGraph",
    "location": {
      "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Extends `<mxEventSource>` to implement a graph component for the browser. This is the main class of the package."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "doc": "Constructs a new mxGraph in the specified container. Model is an optional mxGraphModel. If no model is provided, a new mxGraphModel instance is  used as the model. The container must have a valid owner document prior  to calling this function in Internet Explorer. RenderHint is a string to affect the display performance and rendering in IE, but not in SVG-based  browsers. The parameter is mapped to `<dialect>`, which may  be one of `<mxConstants.DIALECT_SVG>` for SVG-based browsers,  `<mxConstants.DIALECT_STRICTHTML>` for fastest display mode, `<mxConstants.DIALECT_PREFERHTML>` for faster display mode, `<mxConstants.DIALECT_MIXEDHTML>` for fast. The dialects are defined in mxConstants. The default values are `DIALECT_SVG` for SVG-based browsers and `DIALECT_MIXED` for IE.\n\nThe possible values for the renderingHint parameter are explained below:\n- fast：The parameter is based on the fact that the display performance is highly improved in IE if the VML is not contained within a VML group element. The lack of a group element only slightly affects the display while panning, but improves the performance by almost a factor of 2, while keeping the display sufficiently accurate. This also allows to render certain shapes as HTML  if the display accuracy is not affected, which is implemented by `<mxShape.isMixedModeHtml>`. This is the default setting and is mapped to `DIALECT_MIXEDHTML`.\n- faster：Same as fast, but more expensive shapes are avoided. This is controlled by `<mxShape.preferModeHtml>`. The default implementation will avoid gradients and rounded rectangles, but more significant shapes, such as rhombus, ellipse, actor and cylinder will be rendered accurately. This setting is mapped to `DIALECT_PREFERHTML`.\n- fastest：Almost anything will be rendered in Html. This allows for rectangles, labels and images. This setting is mapped to `DIALECT_STRICTHTML`.\n- exact：If accurate panning is required and if the diagram is small (up to 100 cells), then this value should be used. \n\nTo create a graph inside a DOM node with an id of graph: \n```\nvar container = document.getElementById('graph');\nvar graph = new mxGraph(container);\n```",
            "tags": [
              {
                "kind": "param",
                "name": "container",
                "doc": "Optional DOM node that acts as a container for the graph. If this is null then the container can be initialized later using `<init>`."
              },
              {
                "kind": "param",
                "name": "model",
                "doc": "Optional `<mxGraphModel>` that constitutes the graph data."
              },
              {
                "kind": "param",
                "name": "renderHint",
                "doc": "Optional string that specifies the display accuracy and performance. Default is mxConstants.DIALECT_MIXEDHTML (for IE)."
              },
              {
                "kind": "param",
                "name": "stylesheet",
                "doc": "Optional `<mxStylesheet>` to be used in the graph."
              },
              {
                "kind": "param",
                "name": "rendering",
                "doc": "Optional boolean that specifies if rendering should be enabled."
              }
            ]
          },
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "container",
              "optional": false
            },
            {
              "kind": "identifier",
              "name": "model",
              "optional": false
            },
            {
              "kind": "identifier",
              "name": "renderHint",
              "optional": false
            },
            {
              "kind": "identifier",
              "name": "stylesheet",
              "optional": false
            },
            {
              "kind": "identifier",
              "name": "rendering",
              "optional": false
            }
          ],
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 26,
            "col": 2
          }
        }
      ],
      "properties": [
        {
          "jsDoc": {
            "doc": "Holds the mouse event listeners. See `<fireMouseEvent>`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mouseListeners",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 31,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the state of the mouse button."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isMouseDown",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 36,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the `<mxGraphModel>` that contains the cells to be displayed."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "model",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 41,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the `<mxGraphView>` that caches the `<mxCellStates>` for the cells."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "view",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 46,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the `<mxStylesheet>` that defines the appearance of the cells.\n\nUse the following code to read a stylesheet into an existing graph.\n```\nvar req = mxUtils.load('stylesheet.xml');\nvar root = req.getDocumentElement();\nvar dec = new mxCodec(root.ownerDocument);\ndec.decode(root, graph.stylesheet);\n```"
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "stylesheet",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 59,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the `<mxGraphSelectionModel>` that models the current selection."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectionModel",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 64,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the `<mxCellEditor>` that is used as the in-place editing."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellEditor",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 69,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the `<mxCellRenderer>` for rendering the cells in the graph."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellRenderer",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 74,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "An array of `<mxMultiplicities>` describing the allowed connections in a graph."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "multiplicities",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 79,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "RenderHint as it was passed to the constructor."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "renderHint",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 84,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Dialect to be used for drawing the graph. Possible values are all constants in `<mxConstants>` with a DIALECT-prefix."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dialect",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 89,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the grid size. Default is `10`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "gridSize",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 94,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the grid is enabled. This is used in `<snap>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "gridEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 99,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if ports are enabled. This is used in `<cellConnected>` to update the respective style. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "portsEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 104,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if native double click events should be detected. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "nativeDoubleClickEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 109,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if double taps on touch-based devices should be handled as a double click. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "doubleTapEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 114,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the timeout for double taps and non-native double clicks. Default is `500` ms."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "doubleTapTimeout",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 119,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the tolerance for double taps and double clicks in quirks mode. Default is `25` pixels."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "doubleTapTolerance",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 124,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the x-coordinate of the last touch event for double tap detection."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastTouchX",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 129,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the y-coordinate of the last touch event for double tap detection."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastTouchX",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 134,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the time of the last touch event for double click detection."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "lastTouchTime",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 139,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if tap and hold should be used for starting connections on touch-based devices. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tapAndHoldEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 144,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the time for a tap and hold. Default is `350` ms."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tapAndHoldDelay",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 149,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "True if the timer for tap and hold events is running."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tapAndHoldInProgress",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 154,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "True as long as the timer is running and the touch events stay within the given `<tapAndHoldTolerance>`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tapAndHoldValid",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 159,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the x-coordinate of the intial touch event for tap and hold."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "initialTouchX",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 164,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the y-coordinate of the intial touch event for tap and hold."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "initialTouchY",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 169,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Tolerance for a move to be handled as a single click. Default is `4` pixels."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tolerance",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 174,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Value returned by `<getOverlap>` if `<isAllowOverlapParent>` returns true for the given cell. `<getOverlap>` is used in `<constrainChild>` if `<isConstrainChild>` returns true. The value specifies the portion of the child which is allowed to overlap the parent."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultOverlap",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 179,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the default parent to be used to insert new cells. This is used in `<getDefaultParent>`. Default is `null`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultParent",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 184,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the alternate edge style to be used if the main control point on an edge is being doubleclicked. Default is `null`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "alternateEdgeStyle",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 189,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the `<mxImage>` to be returned by `<getBackgroundImage>`. Default is `null`.\n```\nvar img = new mxImage('http://www.example.com/maps/examplemap.jpg', 1024, 768);\ngraph.setBackgroundImage(img);\ngraph.view.validate();\n```"
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "backgroundImage",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 199,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the background page should be visible. Default is `false`. Not yet implemented."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pageVisible",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 204,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if a dashed line should be drawn between multiple pages. Default is `false`. If you change this value while a graph is being displayed then you should call `<sizeDidChange>` to force an update of the display."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pageBreaksVisible",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 209,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the color for page breaks. Default is `'gray'`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pageBreakColor",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 214,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the page breaks should be dashed. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pageBreakDashed",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 219,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the minimum distance for page breaks to be visible. Default is `20` (in pixels)."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "minPageBreakDist",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 224,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph size should be rounded to the next page number in `<sizeDidChange>`. This is only used if the graph container has scrollbars. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "preferPageSize",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 229,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the page format for the background page. Default is `<mxConstants.PAGE_FORMAT_A4_PORTRAIT>`. This is used as the default in `<mxPrintPreview>` and for painting the background page if `<pageVisible>` is true and the pagebreaks if `<pageBreaksVisible>` is true."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pageFormat",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 234,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the scale of the background page. Default is `1`.5. Not yet implemented."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pageScale",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 239,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isEnabled>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "enabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 244,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if `<mxKeyHandler>` should invoke `<escape>` when the escape key is pressed. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "escapeEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 249,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "If true, when editing is to be stopped by way of selection changing, data in diagram changing or other means stopCellEditing is invoked, and changes are saved. This is implemented in a focus handler in `<mxCellEditor>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "invokesStopCellEditing",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 254,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "If true, pressing the enter key without pressing control or shift will stop editing and accept the new value. This is used in `<mxCellEditor>` to stop cell editing. Note: You can always use F2 and escape to stop editing. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "enterStopsCellEditing",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 259,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if scrollbars should be used for panning in `<panGraph>` if any scrollbars are available. If scrollbars are enabled in CSS, but no scrollbars appear because the graph is smaller than the container size, then no panning occurs if this is true. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "useScrollbarsForPanning",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 264,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<canExportCell>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exportEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 269,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<canImportCell>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "importEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 274,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isCellLocked>`. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsLocked",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 279,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isCellCloneable>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsCloneable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 284,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if folding (collapse and expand via an image icon in the graph should be enabled). Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "foldingEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 289,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isCellEditable>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsEditable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 294,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isCellDeletable>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsDeletable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 299,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isCellMovable>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsMovable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 304,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for edges in `<isLabelMovable>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "edgeLabelsMovable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 309,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for vertices in `<isLabelMovable>`. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "vertexLabelsMovable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 314,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isDropEnabled>`. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dropEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 319,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if dropping onto edges should be enabled. This is ignored if `<dropEnabled>` is false. If enabled, it will call `<splitEdge>` to carry out the drop operation. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "splitEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 324,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isCellResizable>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsResizable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 329,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isCellsBendable>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsBendable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 334,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isCellSelectable>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsSelectable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 339,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isCellDisconntable>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsDisconnectable",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 344,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should automatically update the cell size after an edit. This is used in `<isAutoSizeCell>`. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "autoSizeCells",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 349,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if autoSize style should be applied when cells are added. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "autoSizeCellsOnAdd",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 354,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should automatically scroll if the mouse goes near the container edge while dragging. This is only taken into account if the container has scrollbars. Default is `true`.\n\nIf you need this to work without scrollbars then set `<ignoreScrollbars>` to true. Please consult the `<ignoreScrollbars>` for details. In general, with no scrollbars, the use of `<allowAutoPanning>` is recommended."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "autoScroll",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 361,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should automatically scroll regardless of the scrollbars. This will scroll the container using positive values for scroll positions (ie usually only rightwards and downwards). To avoid possible conflicts with panning, set `<translateToScrollPosition>` to true."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ignoreScrollbars",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 366,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should automatically convert the current scroll position to a translate in the graph view when a mouseUp event is received. This can be used to avoid conflicts when using `<autoScroll>` and `<ignoreScrollbars>` with no scrollbars in the container."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "translateToScrollPosition",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 371,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if autoscrolling should be carried out via mxPanningManager even if the container has scrollbars. This disables `<scrollPointToVisible>` and uses `<mxPanningManager>` instead. If this is true then `<autoExtend>` is disabled. It should only be used with a scroll buffer or when scollbars are visible and scrollable in all directions. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "timerAutoScroll",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 376,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if panning via `<panGraph>` should be allowed to implement autoscroll if no scrollbars are available in `<scrollPointToVisible>`. To enable panning inside the container, near the edge, set `<mxPanningManager.border>` to a positive value. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "allowAutoPanning",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 381,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the size of the graph should be automatically extended if the mouse goes near the container edge while dragging. This is only taken into account if the container has scrollbars. Default is `true`. See `<autoScroll>`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "autoExtend",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 386,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "`<mxRectangle>` that specifies the area in which all cells in the diagram should be placed. Uses in `<getMaximumGraphBounds>`. Use a width or height of 0 if you only want to give a upper, left corner."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "maximumGraphBounds",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 391,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "`<mxRectangle>` that specifies the minimum size of the graph. This is ignored if the graph container has no scrollbars. Default is `null`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "minimumGraphSize",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 396,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "`<mxRectangle>` that specifies the minimum size of the `<container>` if `<resizeContainer>` is true."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "minimumContainerSize",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 401,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "`<mxRectangle>` that specifies the maximum size of the container if `<resizeContainer>` is true."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "maximumContainerSize",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 406,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the container should be resized to the graph size when the graph size has changed. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resizeContainer",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 411,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Border to be added to the bottom and right side when the container is being resized after the graph has been changed. Default is `0`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "border",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 416,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges should appear in the foreground regardless of their order in the model. If `<keepEdgesInForeground>` and `<keepEdgesInBackground>` are both true then the normal order is applied. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "keepEdgesInForeground",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 421,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges should appear in the background regardless of their order in the model. If `<keepEdgesInForeground>` and `<keepEdgesInBackground>` are both true then the normal order is applied. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "keepEdgesInBackground",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 426,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if negative coordinates for vertices are allowed. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "allowNegativeCoordinates",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 431,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if a child should be constrained inside the parent bounds after a move or resize of the child. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "constrainChildren",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 436,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if child cells with relative geometries should be constrained inside the parent bounds, if `<constrainChildren>` is true, and/or the `<maximumGraphBounds>`. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "constrainRelativeChildren",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 441,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if a parent should contain the child bounds after a resize of the child. Default is `true`. This has precedence over `<constrainChildren>`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "extendParents",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 446,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if parents should be extended according to the `<extendParents>` switch if cells are added. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "extendParentsOnAdd",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 451,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if parents should be extended according to the `<extendParents>` switch if cells are added. Default is `false` for backwards compatiblity."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "extendParentsOnAdd",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 456,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isRecursiveResize>`. Default is `false` for backwards compatiblity."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "recursiveResize",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 461,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the cell size should be changed to the preferred size when a cell is first collapsed. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "collapseToPreferredSize",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 466,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the factor used for `<zoomIn>` and `<zoomOut>`. Default is `1`.2 (120%)."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "zoomFactor",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 471,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the viewport should automatically contain the selection cells after a zoom operation. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "keepSelectionVisibleOnZoom",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 476,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the zoom operations should go into the center of the actual diagram rather than going from top, left. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "centerZoom",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 481,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the scale and translate should be reset if the root changes in the model. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resetViewOnRootChange",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 486,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edge control points should be reset after the resize of a connected cell. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resetEdgesOnResize",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 491,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edge control points should be reset after the move of a connected cell. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resetEdgesOnMove",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 496,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edge control points should be reset after the the edge has been reconnected. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resetEdgesOnConnect",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 501,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if loops (aka self-references) are allowed. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "allowLoops",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 506,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "`<mxEdgeStyle>` to be used for loops. This is a fallback for loops if the `<mxConstants.STYLE_LOOP>` is undefined. Default is `<mxEdgeStyle.Loop>`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "defaultLoopStyle",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 511,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if multiple edges in the same direction between the same pair of vertices are allowed. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "multigraph",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 516,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges are connectable. Default is `false`. This overrides the connectable field in edges."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "connectableEdges",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 521,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges with disconnected terminals are allowed in the graph. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "allowDanglingEdges",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 526,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges that are cloned should be validated and only inserted if they are valid. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cloneInvalidEdges",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 531,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges should be disconnected from their terminals when they are moved. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "disconnectOnMove",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 536,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if labels should be visible. This is used in `<getLabel>`. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "labelsVisible",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 541,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the return value for `<isHtmlLabel>`. Default is `false`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "htmlLabels",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 546,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if swimlanes should be selectable via the content if the mouse is released. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "swimlaneSelectionEnabled",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 551,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if nesting of swimlanes is allowed. Default is `true`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "swimlaneNesting",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 556,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "The attribute used to find the color for the indicator if the indicator color is set to 'swimlane'. Default is `<mxConstants.STYLE_FILLCOLOR>`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "swimlaneIndicatorColorAttribute",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 561,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Holds the list of image bundles."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "imageBundles",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 566,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the minimum scale to be applied in `<fit>`. Default is `0`.1. Set this to null to allow any value."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "minFitScale",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 571,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the maximum scale to be applied in `<fit>`. Default is `8`. Set this to null to allow any value."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "maxFitScale",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 576,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Current horizontal panning value. Default is `0`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "panDx",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 581,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Current vertical panning value. Default is `0`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "panDy",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 586,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the `<mxImage>` to indicate a collapsed state. Default value is mxClient.imageBasePath + '/collapsed.gif'"
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "collapsedImage",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 591,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the `<mxImage>` to indicate a expanded state. Default value is mxClient.imageBasePath + '/expanded.gif'"
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "expandedImage",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 596,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the `<mxImage>` for the image to be used to display a warning overlay. See `<setCellWarning>`. Default value is mxClient.imageBasePath + '/warning'.  The extension for the image depends on the platform. It is '.png' on the Mac and '.gif' on all other platforms."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "warningImage",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 601,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the resource key for the error message to be displayed in non-multigraphs when two vertices are already connected. If the resource for this key does not exist then the value is used as the error message. Default is `'alreadyConnected'`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "alreadyConnectedResource",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 606,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the resource key for the warning message to be displayed when a collapsed cell contains validation errors. If the resource for this key does not exist then the value is used as the warning message. Default is `'containsValidationErrors'`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "containsValidationErrorsResource",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 611,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies the resource key for the tooltip on the collapse/expand icon. If the resource for this key does not exist then the value is used as the tooltip. Default is `'collapse-expand'`."
          },
          "readonly": false,
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "collapseExpandResource",
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 616,
            "col": 2
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Initializes the `<container>` and creates the respective datastructures.",
            "tags": [
              {
                "kind": "param",
                "name": "container",
                "doc": "DOM node that will contain the graph display."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "init",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "container",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 622,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates the tooltip-, panning-, connection- and graph-handler (in this order). This is called in the constructor before `<init>` is called."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createHandlers",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 627,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates and returns a new `<mxTooltipHandler>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createTooltipHandler",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 632,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates and returns a new `<mxTooltipHandler>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createSelectionCellsHandler",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 637,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates and returns a new `<mxConnectionHandler>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createConnectionHandler",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 642,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates and returns a new `<mxGraphHandler>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createGraphHandler",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 647,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates and returns a new `<mxPanningHandler>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createPanningHandler",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 652,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates and returns a new `<mxPopupMenuHandler>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createPopupMenuHandler",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 657,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new `<mxGraphSelectionModel>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createSelectionModel",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 662,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new `<mxGraphSelectionModel>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createStylesheet",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 667,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new `<mxGraphView>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createGraphView",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 672,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new `<mxCellRenderer>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createCellRenderer",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 677,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new `<mxCellEditor>` to be used in this graph."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createCellEditor",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 682,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxGraphModel>` that contains the cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getModel",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 687,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxGraphView>` that contains the `<mxCellStates>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getView",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 692,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxStylesheet>` that defines the style."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getStylesheet",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 697,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the `<mxStylesheet>` that defines the style."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setStylesheet",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 702,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxGraphSelectionModel>` that contains the selection."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSelectionModel",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 707,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the `<mxSelectionModel>` that contains the selection."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setSelectionModel",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 712,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells to be selected for the given array of changes.",
            "tags": [
              {
                "kind": "param",
                "name": "ignoreFn",
                "doc": "Optional function that takes a change and returns true if the change should be ignored. \\n"
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSelectionCellsForChanges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ignoreFn",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 718,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Called when the graph model changes. Invokes `<processChange>` on each item of the given array to update the view accordingly.",
            "tags": [
              {
                "kind": "param",
                "name": "changes",
                "doc": "Array that contains the individual changes."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "graphModelChanged",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "changes",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 724,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes selection cells that are not in the model from the selection."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateSelection",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 729,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Processes the given change and invalidates the respective cached data in `<view>`. This fires a `<root>` event if the root has changed in the model.",
            "tags": [
              {
                "kind": "param",
                "name": "change",
                "doc": "Object that represents the change on the model."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "processChange",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "change",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 735,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes all cached information for the given cell and its descendants. This is called when a cell was removed from the model.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that was removed from the model."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeStateForCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 741,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds an `<mxCellOverlay>` for the specified cell. This method fires an `<addoverlay>` event and returns the new `<mxCellOverlay>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to add the overlay for."
              },
              {
                "kind": "param",
                "name": "overlay",
                "doc": "`<mxCellOverlay>` to be added for the cell."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addCellOverlay",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "overlay",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 748,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the array of `<mxCellOverlays>` for the given cell or null, if no overlays are defined.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose overlays should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellOverlays",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 754,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes and returns the given `<mxCellOverlay>` from the given cell. This method fires a `<removeoverlay>` event. If no overlay is given, then all overlays are removed using `<removeOverlays>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose overlay should be removed."
              },
              {
                "kind": "param",
                "name": "overlay",
                "doc": "Optional `<mxCellOverlay>` to be removed."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeCellOverlay",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "overlay",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 761,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes all `<mxCellOverlays>` from the given cell. This method fires a `<removeoverlay>` event for each `<mxCellOverlay>` and returns the array of `<mxCellOverlays>` that was removed from the cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose overlays should be removed"
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeCellOverlays",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 767,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes all `<mxCellOverlays>` in the graph for the given cell and all its descendants. If no cell is specified then all overlays are removed from the graph. This implementation uses `<removeCellOverlays>` to remove the overlays from the individual cells.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "Optional `<mxCell>` that represents the root of the subtree to remove the overlays from. Default is the root in the model."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clearCellOverlays",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 773,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates an overlay for the given cell using the warning and image or `<warningImage>` and returns the new `<mxCellOverlay>`. The warning is displayed as a tooltip in a red font and may contain HTML markup. If the warning is null or a zero length string, then all overlays are removed from the cell.\n```\ngraph.setCellWarning(cell, '<b>Warning:</b>: Hello, World!');\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose warning should be set."
              },
              {
                "kind": "param",
                "name": "warning",
                "doc": "String that represents the warning to be displayed."
              },
              {
                "kind": "param",
                "name": "img",
                "doc": "Optional `<mxImage>` to be used for the overlay. Default is `<warningImage>`."
              },
              {
                "kind": "param",
                "name": "isSelect",
                "doc": "Optional boolean indicating if a click on the overlay should select the corresponding cell. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellWarning",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "warning",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "img",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "isSelect",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 785,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Calls `<startEditingAtCell>` using the given cell or the first selection cell.",
            "tags": [
              {
                "kind": "param",
                "name": "evt",
                "doc": "Optional mouse event that triggered the editing."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "startEditing",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 791,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Fires a `<startEditing>` event and invokes `<mxCellEditor.startEditing>` on `<editor>`. After editing was started, a `<editingStarted>` event is fired.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to start the in-place editor for."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Optional mouse event that triggered the editing."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "startEditingAtCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 798,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the initial value for in-place editing. This implementation returns `<convertValueToString>` for the given cell. If this function is overridden, then `<mxGraphModel.valueForCellChanged>` should take care of correctly storing the actual new value inside the user object.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the initial editing value should be returned."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Optional mouse event that triggered the editor."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEditingValue",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 805,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Stops the current editing  and fires a `<editingStopped>` event.",
            "tags": [
              {
                "kind": "param",
                "name": "cancel",
                "doc": "Boolean that specifies if the current editing value should be stored."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "stopEditing",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cancel",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 811,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the label of the specified cell to the given value using `<cellLabelChanged>` and fires `<mxEvent.LABEL_CHANGED>` while the transaction is in progress. Returns the cell whose label was changed.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose label should be changed."
              },
              {
                "kind": "param",
                "name": "value",
                "doc": "New label to be assigned."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Optional event that triggered the change."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "labelChanged",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 819,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the new label for a cell. If autoSize is true then `<cellSizeUpdated>` will be called.\n\nIn the following example, the function is extended to map changes to attributes in an XML node, as shown in `<convertValueToString>`. Alternatively, the handling of this can be implemented as shown in `<mxGraphModel.valueForCellChanged>` without the need to clone the user object.\n```\nvar graphCellLabelChanged = graph.cellLabelChanged;\ngraph.cellLabelChanged = function(cell, newValue, autoSize)\n{\n  // Cloned for correct undo/redo\n  var elt = cell.value.cloneNode(true);\n  elt.setAttribute('label', newValue);\n \n  newValue = elt;\n  graphCellLabelChanged.apply(this, arguments);\n};\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose label should be changed."
              },
              {
                "kind": "param",
                "name": "value",
                "doc": "New label to be assigned."
              },
              {
                "kind": "param",
                "name": "autoSize",
                "doc": "Boolean that specifies if `<cellSizeUpdated>` should be called."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellLabelChanged",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "autoSize",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 841,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Processes an escape keystroke.",
            "tags": [
              {
                "kind": "param",
                "name": "evt",
                "doc": "Mouseevent that represents the keystroke."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "escape",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 847,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Processes a singleclick on an optional cell and fires a `<click>` event. The click event is fired initially. If the graph is enabled and the event has not been consumed, then the cell is selected using `<selectCellForEvent>` or the selection is cleared using `<clearSelection>`. The events consumed state is set to true if the corresponding `<mxMouseEvent>` has been consumed.\n\nTo handle a click event, use the following code.\n```\ngraph.addListener(mxEvent.CLICK, function(sender, evt)\n{\n  var e = evt.getProperty('event'); // mouse event\n  var cell = evt.getProperty('cell'); // cell may be null\n  \n  if (cell != null)\n  {\n    // Do something useful with cell and consume the event\n    evt.consume();\n  }\n});\n```",
            "tags": [
              {
                "kind": "param",
                "name": "me",
                "doc": "`<mxMouseEvent>` that represents the single click."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "click",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "me",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 868,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if any sibling of the given cell is selected."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSiblingSelected",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 873,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Processes a doubleclick on an optional cell and fires a `<dblclick>` event. The event is fired initially. If the graph is enabled and the event has not been consumed, then `<edit>` is called with the given cell. The event is ignored if no cell was specified.\n\nExample for overriding this method.\n```\ngraph.dblClick = function(evt, cell)\n{\n  var mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n  this.fireEvent(mxe);\n  \n  if (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n  {\n\t   mxUtils.alert('Hello, World!');\n    mxe.consume();\n  }\n}\n```\n\nExample listener for this event.\n```\ngraph.addListener(mxEvent.DOUBLE_CLICK, function(sender, evt)\n{\n  var cell = evt.getProperty('cell');\n  // do something with the cell and consume the\n  // event to prevent in-place editing from start\n});\n```",
            "tags": [
              {
                "kind": "param",
                "name": "evt",
                "doc": "Mouseevent that represents the doubleclick."
              },
              {
                "kind": "param",
                "name": "cell",
                "doc": "Optional `<mxCell>` under the mousepointer."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "dblClick",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 905,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Handles the `<mxMouseEvent>` by highlighting the `<mxCellState>`.",
            "tags": [
              {
                "kind": "param",
                "name": "me",
                "doc": "`<mxMouseEvent>` that represents the touch event."
              },
              {
                "kind": "param",
                "name": "state",
                "doc": "Optional `<mxCellState>` that is associated with the event."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "tapAndHold",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "me",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 912,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Scrolls the graph to the given point, extending the graph container if specified."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "scrollPointToVisible",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 917,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates and returns an `<mxPanningManager>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createPanningManager",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 922,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the size of the border and padding on all four sides of the container. The left, top, right and bottom borders are stored in the x, y, width and height of the returned `<mxRectangle>`, respectively."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBorderSizes",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 927,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the preferred size of the background page if `<preferPageSize>` is true."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getPreferredPageSize",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 932,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Scales the graph such that the complete diagram fits into `<container>` and returns the current scale in the view. To fit an initial graph prior to rendering, set `<mxGraphView.rendering>` to false prior to changing the model and execute the following after changing the model.\n```\ngraph.fit();\ngraph.view.rendering = true;\ngraph.refresh();\n```\n\nTo fit and center the graph, the following code can be used.\n```\nvar margin = 2;\nvar max = 3;\n\nvar bounds = graph.getGraphBounds();\nvar cw = graph.container.clientWidth - margin;\nvar ch = graph.container.clientHeight - margin;\nvar w = bounds.width / graph.view.scale;\nvar h = bounds.height / graph.view.scale;\nvar s = Math.min(max, Math.min(cw / w, ch / h));\n\ngraph.view.scaleAndTranslate(s,\n  (margin + cw - w * s) / (2 * s) - bounds.x / graph.view.scale,\n  (margin + ch - h * s) / (2 * s) - bounds.y / graph.view.scale);\n```",
            "tags": [
              {
                "kind": "param",
                "name": "border",
                "doc": "Optional number that specifies the border. Default is `<border>`."
              },
              {
                "kind": "param",
                "name": "keepOrigin",
                "doc": "Optional boolean that specifies if the translate should be changed. Default is false."
              },
              {
                "kind": "param",
                "name": "margin",
                "doc": "Optional margin in pixels. Default is 0."
              },
              {
                "kind": "param",
                "name": "enabled",
                "doc": "Optional boolean that specifies if the scale should be set or just returned. Default is true."
              },
              {
                "kind": "param",
                "name": "ignoreWidth",
                "doc": "Optional boolean that specifies if the width should be ignored. Default is false."
              },
              {
                "kind": "param",
                "name": "ignoreHeight",
                "doc": "Optional boolean that specifies if the height should be ignored. Default is false."
              },
              {
                "kind": "param",
                "name": "maxHeight",
                "doc": "Optional maximum height."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fit",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "border",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "keepOrigin",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "margin",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "enabled",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreWidth",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreHeight",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "maxHeight",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 966,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Called when the size of the graph has changed. This implementation fires a `<size>` event after updating the clipping region of the SVG element in SVG-bases browsers."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "sizeDidChange",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 971,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Resizes the container for the given graph width and height."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "doResizeContainer",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 976,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Invokes from `<sizeDidChange>` to redraw the page breaks.",
            "tags": [
              {
                "kind": "param",
                "name": "visible",
                "doc": "Boolean that specifies if page breaks should be shown."
              },
              {
                "kind": "param",
                "name": "width",
                "doc": "Specifies the width of the container in pixels."
              },
              {
                "kind": "param",
                "name": "height",
                "doc": "Specifies the height of the container in pixels."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updatePageBreaks",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "visible",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "width",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "height",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 984,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the style for the given cell from the cell state, if one exists, or using `<getCellStyle>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose style should be returned as an array."
              },
              {
                "kind": "param",
                "name": "ignoreState",
                "doc": "Optional boolean that specifies if the cell state should be ignored."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCurrentCellStyle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreState",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 991,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an array of key, value pairs representing the cell style for the given cell. If no string is defined in the model that specifies the style, then the default style for the cell is returned or an empty object, if no style can be found. Note: You should try and get the cell state for the given cell and use the cached style in the state before using this method.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose style should be returned as an array."
              },
              {
                "kind": "param",
                "name": "resolve",
                "doc": "Optional boolean that specifies if any special values such as none or default, special short URIs, image keys etc should be resolved in the return value. Default is true."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellStyle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "resolve",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 998,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Tries to resolve the value for the image style in the image bundles and turns short data URIs as defined in mxImageBundle to data URIs as defined in RFC 2397 of the IETF."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "postProcessCellStyle",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1003,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the style of the specified cells. If no cells are given, then the selection cells are changed.",
            "tags": [
              {
                "kind": "param",
                "name": "style",
                "doc": "String representing the new style of the cells."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Optional array of `<mxCells>` to set the style for. Default is the selection cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellStyle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "style",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1010,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Toggles the boolean value for the given key in the style of the given cell and returns the new value as 0 or 1. If no cell is specified then the selection cell is used.",
            "tags": [
              {
                "kind": "param",
                "name": "key",
                "doc": "String representing the key for the boolean value to be toggled."
              },
              {
                "kind": "param",
                "name": "defaultValue",
                "doc": "Optional boolean default value if no value is defined. Default is false."
              },
              {
                "kind": "param",
                "name": "cell",
                "doc": "Optional `<mxCell>` whose style should be modified. Default is the selection cell."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toggleCellStyle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "defaultValue",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1018,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Toggles the boolean value for the given key in the style of the given cells and returns the new value as 0 or 1. If no cells are specified, then the selection cells are used. For example, this can be used to toggle `<mxConstants.STYLE_ROUNDED>` or any other style with a boolean value.",
            "tags": [
              {
                "kind": "param",
                "name": "key",
                "doc": "String representing the key for the boolean value to be toggled."
              },
              {
                "kind": "param",
                "name": "defaultValue",
                "doc": "Optional boolean default value if no value is defined. Default is false."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Optional array of `<mxCells>` whose styles should be modified. Default is the selection cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toggleCellStyles",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "defaultValue",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1026,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the key to value in the styles of the given cells. This will modify the existing cell styles in-place and override any existing assignment for the given key. If no cells are specified, then the selection cells are changed. If no value is specified, then the respective key is removed from the styles.",
            "tags": [
              {
                "kind": "param",
                "name": "key",
                "doc": "String representing the key to be assigned."
              },
              {
                "kind": "param",
                "name": "value",
                "doc": "String representing the new value for the key."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Optional array of `<mxCells>` to change the style for. Default is the selection cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellStyles",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1034,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Toggles the given bit for the given key in the styles of the specified cells.",
            "tags": [
              {
                "kind": "param",
                "name": "key",
                "doc": "String representing the key to toggle the flag in."
              },
              {
                "kind": "param",
                "name": "flag",
                "doc": "Integer that represents the bit to be toggled."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Optional array of `<mxCells>` to change the style for. Default is the selection cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toggleCellStyleFlags",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "flag",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1042,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets or toggles the given bit for the given key in the styles of the specified cells.",
            "tags": [
              {
                "kind": "param",
                "name": "key",
                "doc": "String representing the key to toggle the flag in."
              },
              {
                "kind": "param",
                "name": "flag",
                "doc": "Integer that represents the bit to be toggled."
              },
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean value to be used or null if the value should be toggled."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Optional array of `<mxCells>` to change the style for. Default is the selection cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellStyleFlags",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "key",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "flag",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1051,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the absolute origin for the given cell."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getOriginForCell",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1056,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Aligns the given cells vertically or horizontally according to the given alignment using the optional parameter as the coordinate.",
            "tags": [
              {
                "kind": "param",
                "name": "align",
                "doc": "Specifies the alignment. Possible values are all constants in mxConstants with an ALIGN prefix."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be aligned."
              },
              {
                "kind": "param",
                "name": "param",
                "doc": "Optional coordinate for the alignment."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "alignCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "align",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "param",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1064,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Toggles the style of the given edge between null (or empty) and `<alternateEdgeStyle>`. This method fires `<mxEvent.FLIP_EDGE>` while the transaction is in progress. Returns the edge that was flipped.\n\nHere is an example that overrides this implementation to invert the value of `<mxConstants.STYLE_ELBOW>` without removing any existing styles.\n```\ngraph.flipEdge = function(edge)\n{\n  if (edge != null)\n  {\n    var style = this.getCurrentCellStyle(edge);\n    var elbow = mxUtils.getValue(style, mxConstants.STYLE_ELBOW,\n        mxConstants.ELBOW_HORIZONTAL);\n    var value = (elbow == mxConstants.ELBOW_HORIZONTAL) ?\n        mxConstants.ELBOW_VERTICAL : mxConstants.ELBOW_HORIZONTAL;\n    this.setCellStyles(mxConstants.STYLE_ELBOW, value, [edge]);\n  }\n};\n```",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` whose style should be changed."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "flipEdge",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1086,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds the specified `<mxImageBundle>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addImageBundle",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1091,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the specified `<mxImageBundle>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeImageBundle",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1096,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Searches all `<imageBundles>` for the specified key and returns the value for the first match or null if the key is not found."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getImageFromBundles",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1101,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Moves the given cells to the front or back. The change is carried out using `<cellsOrdered>`. This method fires `<mxEvent.ORDER_CELLS>` while the transaction is in progress.",
            "tags": [
              {
                "kind": "param",
                "name": "back",
                "doc": "Boolean that specifies if the cells should be moved to back."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to move to the background. If null is specified then the selection cells are used."
              },
              {
                "kind": "param",
                "name": "increment",
                "doc": "Optional boolean that specifies if the cells should be moved by just one layer."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "orderCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "back",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "increment",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1109,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Moves the given cells to the front or back. This method fires `<mxEvent.CELLS_ORDERED>` while the transaction is in progress.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose order should be changed."
              },
              {
                "kind": "param",
                "name": "back",
                "doc": "Boolean that specifies if the cells should be moved to back."
              },
              {
                "kind": "param",
                "name": "increment",
                "doc": "Optional boolean that specifies if the cells should be moved by just one layer."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsOrdered",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "back",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "increment",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1117,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds the cells into the given group. The change is carried out using `<cellsAdded>`, `<cellsMoved>` and `<cellsResized>`. This method fires `<mxEvent.GROUP_CELLS>` while the transaction is in progress. Returns the new group. A group is only created if there is at least one entry in the given array of cells.",
            "tags": [
              {
                "kind": "param",
                "name": "group",
                "doc": "`<mxCell>` that represents the target group. If null is specified then a new group is created using `<createGroupCell>`."
              },
              {
                "kind": "param",
                "name": "border",
                "doc": "Optional integer that specifies the border between the child area and the group bounds. Default is 0."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Optional array of `<mxCells>` to be grouped. If null is specified then the selection cells are used."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "groupCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "group",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "border",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1125,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells with the same parent as the first cell in the given array."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellsForGroup",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1130,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the bounds to be used for the given group and children."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBoundsForGroup",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1135,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook for creating the group cell to hold the given array of `<mxCells>` if no group cell was given to the `<group>` function.\n\nThe following code can be used to set the style of new group cells.\n```\nvar graphCreateGroupCell = graph.createGroupCell;\ngraph.createGroupCell = function(cells)\n{\n  var group = graphCreateGroupCell.apply(this, arguments);\n  group.setStyle('group');\n  \n  return group;\n};\n```"
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createGroupCell",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1152,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Ungroups the given cells by moving the children the children to their parents parent and removing the empty groups. Returns the children that have been removed from the groups.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of cells to be ungrouped. If null is specified then the selection cells are used."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "ungroupCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1158,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the selection cells that can be ungrouped."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellsForUngroup",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1163,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook to remove the groups after `<ungroupCells>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` that were ungrouped."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeCellsAfterUngroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1169,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the specified cells from their parents and adds them to the default parent. Returns the cells that were removed from their parents.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be removed from their parents."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeCellsFromParent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1175,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Updates the bounds of the given groups to include all children and returns the passed-in cells. Call this with the groups in parent to child order, top-most group first, the cells are processed in reverse order and cells with no children are ignored.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "The groups whose bounds should be updated. If this is null, then the selection cells are used."
              },
              {
                "kind": "param",
                "name": "border",
                "doc": "Optional border to be added in the group. Default is 0."
              },
              {
                "kind": "param",
                "name": "moveGroup",
                "doc": "Optional boolean that allows the group to be moved. Default is false."
              },
              {
                "kind": "param",
                "name": "topBorder",
                "doc": "Optional top border to be added in the group. Default is 0."
              },
              {
                "kind": "param",
                "name": "rightBorder",
                "doc": "Optional top border to be added in the group. Default is 0."
              },
              {
                "kind": "param",
                "name": "bottomBorder",
                "doc": "Optional top border to be added in the group. Default is 0."
              },
              {
                "kind": "param",
                "name": "leftBorder",
                "doc": "Optional top border to be added in the group. Default is 0."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateGroupBounds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "border",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "moveGroup",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "topBorder",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "rightBorder",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "bottomBorder",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "leftBorder",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1187,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the bounding box for the given array of `<mxCells>`. The bounding box for each cell and its descendants is computed using `<mxGraphView.getBoundingBox>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose bounding box should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBoundingBox",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1193,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the clone for the given cell. Uses `<cloneCells>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to be cloned."
              },
              {
                "kind": "param",
                "name": "allowInvalidEdges",
                "doc": "Optional boolean that specifies if invalid edges should be cloned. Default is true."
              },
              {
                "kind": "param",
                "name": "mapping",
                "doc": "Optional mapping for existing clones."
              },
              {
                "kind": "param",
                "name": "keepPosition",
                "doc": "Optional boolean indicating if the position of the cells should be updated to reflect the lost parent cell. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cloneCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "allowInvalidEdges",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "mapping",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "keepPosition",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1202,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the clones for the given cells. The clones are created recursively using `<mxGraphModel.cloneCells>`. If the terminal of an edge is not in the given array, then the respective end is assigned a terminal point and the terminal is removed.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be cloned."
              },
              {
                "kind": "param",
                "name": "allowInvalidEdges",
                "doc": "Optional boolean that specifies if invalid edges should be cloned. Default is true."
              },
              {
                "kind": "param",
                "name": "mapping",
                "doc": "Optional mapping for existing clones."
              },
              {
                "kind": "param",
                "name": "keepPosition",
                "doc": "Optional boolean indicating if the position of the cells should be updated to reflect the lost parent cell. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cloneCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "allowInvalidEdges",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "mapping",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "keepPosition",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1211,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds a new vertex into the given parent `<mxCell>` using value as the user object and the given coordinates as the `<mxGeometry>` of the new vertex. The id and style are used for the respective properties of the new `<mxCell>`, which is returned.\n\nWhen adding new vertices from a mouse event, one should take into account the offset of the graph container and the scale and translation of the view in order to find the correct unscaled, untranslated coordinates using `<mxGraph.getPointForEvent>` as follows:\n```\nvar pt = graph.getPointForEvent(evt);\nvar parent = graph.getDefaultParent();\ngraph.insertVertex(parent, null,\n  \t\t'Hello, World!', x, y, 220, 30);\n```\n\nFor adding image cells, the style parameter can be assigned as\n```\nstylename;image=imageUrl\n```",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that specifies the parent of the new vertex."
              },
              {
                "kind": "param",
                "name": "id",
                "doc": "Optional string that defines the Id of the new vertex."
              },
              {
                "kind": "param",
                "name": "value",
                "doc": "Object to be used as the user object."
              },
              {
                "kind": "param",
                "name": "x",
                "doc": "Integer that defines the x coordinate of the vertex."
              },
              {
                "kind": "param",
                "name": "y",
                "doc": "Integer that defines the y coordinate of the vertex."
              },
              {
                "kind": "param",
                "name": "width",
                "doc": "Integer that defines the width of the vertex."
              },
              {
                "kind": "param",
                "name": "height",
                "doc": "Integer that defines the height of the vertex."
              },
              {
                "kind": "param",
                "name": "style",
                "doc": "Optional string that defines the cell style."
              },
              {
                "kind": "param",
                "name": "relative",
                "doc": "Optional boolean that specifies if the geometry is relative. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "insertVertex",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "x",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "width",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "height",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "style",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "relative",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1238,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook method that creates the new vertex for `<insertVertex>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createVertex",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1243,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds a new edge into the given parent `<mxCell>` using value as the user object and the given source and target as the terminals of the new edge. The id and style are used for the respective properties of the new `<mxCell>`, which is returned.",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that specifies the parent of the new edge."
              },
              {
                "kind": "param",
                "name": "id",
                "doc": "Optional string that defines the Id of the new edge."
              },
              {
                "kind": "param",
                "name": "value",
                "doc": "JavaScript object to be used as the user object."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "`<mxCell>` that defines the source of the edge."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that defines the target of the edge."
              },
              {
                "kind": "param",
                "name": "style",
                "doc": "Optional string that defines the cell style."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "insertEdge",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "id",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "style",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1254,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook method that creates the new edge for `<insertEdge>`. This implementation does not set the source and target of the edge, these are set when the edge is added to the model."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createEdge",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1259,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds the edge to the parent and connects it to the given source and target terminals. This is a shortcut method. Returns the edge that was added.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` to be inserted into the given parent."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that represents the new parent. If no parent is given then the default parent is used."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Optional `<mxCell>` that represents the source terminal."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "Optional `<mxCell>` that represents the target terminal."
              },
              {
                "kind": "param",
                "name": "index",
                "doc": "Optional index to insert the cells at. Default is to append."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addEdge",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "index",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1269,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds the cell to the parent and connects it to the given source and target terminals. This is a shortcut method. Returns the cell that was added.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to be inserted into the given parent."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that represents the new parent. If no parent is given then the default parent is used."
              },
              {
                "kind": "param",
                "name": "index",
                "doc": "Optional index to insert the cells at. Default is to append."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Optional `<mxCell>` that represents the source terminal."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "Optional `<mxCell>` that represents the target terminal."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "index",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1279,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds the cells to the parent at the given index, connecting each cell to the optional source and target terminal. The change is carried out using `<cellsAdded>`. This method fires `<mxEvent.ADD_CELLS>` while the transaction is in progress. Returns the cells that were added.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be inserted."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that represents the new parent. If no parent is given then the default parent is used."
              },
              {
                "kind": "param",
                "name": "index",
                "doc": "Optional index to insert the cells at. Default is to append."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Optional source `<mxCell>` for all inserted cells."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "Optional target `<mxCell>` for all inserted cells."
              },
              {
                "kind": "param",
                "name": "absolute",
                "doc": "Optional boolean indicating of cells should be kept at their absolute position. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "index",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "absolute",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1290,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds the specified cells to the given parent. This method fires `<mxEvent.CELLS_ADDED>` while the transaction is in progress."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsAdded",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1295,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Resizes the specified cell to just fit around the its label and/or children",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCells>` to be resized."
              },
              {
                "kind": "param",
                "name": "recurse",
                "doc": "Optional boolean which specifies if all descendants should be autosized. Default is true."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "autoSizeCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "recurse",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1302,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the given cells from the graph including all connected edges if includeEdges is true. The change is carried out using `<cellsRemoved>`. This method fires `<mxEvent.REMOVE_CELLS>` while the transaction is in progress. The removed cells are returned as an array.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to remove. If null is specified then the selection cells which are deletable are used."
              },
              {
                "kind": "param",
                "name": "includeEdges",
                "doc": "Optional boolean which specifies if all connected edges should be removed as well. Default is true."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeEdges",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1309,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the given cells from the model. This method fires `<mxEvent.CELLS_REMOVED>` while the transaction is in progress.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to remove."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsRemoved",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1315,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Splits the given edge by adding the newEdge between the previous source and the given cell and reconnecting the source of the given edge to the given cell. This method fires `<mxEvent.SPLIT_EDGE>` while the transaction is in progress. Returns the new edge that was inserted.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that represents the edge to be splitted."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "`<mxCells>` that represents the cells to insert into the edge."
              },
              {
                "kind": "param",
                "name": "newEdge",
                "doc": "`<mxCell>` that represents the edge to be inserted."
              },
              {
                "kind": "param",
                "name": "dx",
                "doc": "Optional integer that specifies the vector to move the cells."
              },
              {
                "kind": "param",
                "name": "dy",
                "doc": "Optional integer that specifies the vector to move the cells."
              },
              {
                "kind": "param",
                "name": "x",
                "doc": "Integer that specifies the x-coordinate of the drop location."
              },
              {
                "kind": "param",
                "name": "y",
                "doc": "Integer that specifies the y-coordinate of the drop location."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "Optional parent to insert the cell. If null the parent of the edge is used."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "splitEdge",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "newEdge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "dx",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "dy",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "x",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1328,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the visible state of the specified cells and all connected edges if includeEdges is true. The change is carried out using `<cellsToggled>`. This method fires `<mxEvent.TOGGLE_CELLS>` while the transaction is in progress. Returns the cells whose visible state was changed.",
            "tags": [
              {
                "kind": "param",
                "name": "show",
                "doc": "Boolean that specifies the visible state to be assigned."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose visible state should be changed. If null is specified then the selection cells are used."
              },
              {
                "kind": "param",
                "name": "includeEdges",
                "doc": "Optional boolean indicating if the visible state of all connected edges should be changed as well. Default is true."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "toggleCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "show",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeEdges",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1336,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the visible state of the specified cells.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose visible state should be changed."
              },
              {
                "kind": "param",
                "name": "show",
                "doc": "Boolean that specifies the visible state to be assigned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsToggled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "show",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1343,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the collapsed state of the specified cells and all descendants if recurse is true. The change is carried out using `<cellsFolded>`. This method fires `<mxEvent.FOLD_CELLS>` while the transaction is in progress. Returns the cells whose collapsed state was changed.",
            "tags": [
              {
                "kind": "param",
                "name": "collapsed",
                "doc": "Boolean indicating the collapsed state to be assigned."
              },
              {
                "kind": "param",
                "name": "recurse",
                "doc": "Optional boolean indicating if the collapsed state of all descendants should be set. Default is false."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose collapsed state should be set. If null is specified then the foldable selection cells are used."
              },
              {
                "kind": "param",
                "name": "checkFoldable",
                "doc": "Optional boolean indicating of isCellFoldable should be checked. Default is false."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Optional native event that triggered the invocation."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "foldCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "collapsed",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "recurse",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "checkFoldable",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1353,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the collapsed state of the specified cells. This method fires `<mxEvent.CELLS_FOLDED>` while the transaction is in progress. Returns the cells whose collapsed state was changed.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose collapsed state should be set."
              },
              {
                "kind": "param",
                "name": "collapsed",
                "doc": "Boolean indicating the collapsed state to be assigned."
              },
              {
                "kind": "param",
                "name": "recurse",
                "doc": "Boolean indicating if the collapsed state of all descendants should be set."
              },
              {
                "kind": "param",
                "name": "checkFoldable",
                "doc": "Optional boolean indicating of isCellFoldable should be checked. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsFolded",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "collapsed",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "recurse",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "checkFoldable",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1362,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Swaps the alternate and the actual bounds in the geometry of the given cell invoking `<updateAlternateBounds>` before carrying out the swap.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the bounds should be swapped."
              },
              {
                "kind": "param",
                "name": "willCollapse",
                "doc": "Boolean indicating if the cell is going to be collapsed."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "swapBounds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "willCollapse",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1369,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Updates or sets the alternate bounds in the given geometry for the given cell depending on whether the cell is going to be collapsed. If no alternate bounds are defined in the geometry and `<collapseToPreferredSize>` is true, then the preferred size is used for the alternate bounds. The top, left corner is always kept at the same location.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the geometry is being udpated."
              },
              {
                "kind": "param",
                "name": "g",
                "doc": "`<mxGeometry>` for which the alternate bounds should be updated."
              },
              {
                "kind": "param",
                "name": "willCollapse",
                "doc": "Boolean indicating if the cell is going to be collapsed."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateAlternateBounds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "g",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "willCollapse",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1377,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an array with the given cells and all edges that are connected to a cell or one of its descendants."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addAllEdges",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1382,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all edges connected to the given cells or its descendants."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAllEdges",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1387,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Updates the size of the given cell in the model using `<cellSizeUpdated>`. This method fires `<mxEvent.UPDATE_CELL_SIZE>` while the transaction is in progress. Returns the cell whose size was updated.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose size should be updated."
              },
              {
                "kind": "param",
                "name": "ignoreChildren",
                "doc": "Boolean indicating if children should be ignored. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateCellSize",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreChildren",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1394,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Updates the size of the given cell in the model using `<getPreferredSizeForCell>` to get the new size.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the size should be changed."
              },
              {
                "kind": "param",
                "name": "ignoreChildren",
                "doc": "Boolean indicating if children should be ignored. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellSizeUpdated",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreChildren",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1401,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the preferred width and height of the given `<mxCell>` as an `<mxRectangle>`. To implement a minimum width, add a new style eg. minWidth in the vertex and override this method as follows.\n```\nvar graphGetPreferredSizeForCell = graph.getPreferredSizeForCell;\ngraph.getPreferredSizeForCell = function(cell)\n{\n  var result = graphGetPreferredSizeForCell.apply(this, arguments);\n  var style = this.getCellStyle(cell);\n  \n  if (style['minWidth'] > 0)\n  {\n    result.width = Math.max(style['minWidth'], result.width);\n  }\n\n  return result;\n};\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the preferred size should be returned."
              },
              {
                "kind": "param",
                "name": "textWidth",
                "doc": "Optional maximum text width for word wrapping."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getPreferredSizeForCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "textWidth",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1423,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the bounds of the given cell using `<resizeCells>`. Returns the cell which was passed to the function.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose bounds should be changed."
              },
              {
                "kind": "param",
                "name": "bounds",
                "doc": "`<mxRectangle>` that represents the new bounds."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resizeCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "bounds",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1430,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the bounds of the given cells and fires a `<mxEvent.RESIZE_CELLS>` event while the transaction is in progress. Returns the cells which have been passed to the function.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose bounds should be changed."
              },
              {
                "kind": "param",
                "name": "bounds",
                "doc": "Array of `<mxRectangles>` that represent the new bounds."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resizeCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "bounds",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1437,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the bounds of the given cells and fires a `<mxEvent.CELLS_RESIZED>` event. If `<extendParents>` is true, then the parent is extended if a child size is changed so that it overlaps with the parent.\n\nThe following example shows how to control group resizes to make sure that all child cells stay within the group.\n```\ngraph.addListener(mxEvent.CELLS_RESIZED, function(sender, evt)\n{\n  var cells = evt.getProperty('cells');\n  \n  if (cells != null)\n  {\n    for (var i = 0; i < cells.length; i++)\n    {\n      if (graph.getModel().getChildCount(cells[i]) > 0)\n      {\n        var geo = graph.getCellGeometry(cells[i]);\n        \n        if (geo != null)\n        {\n          var children = graph.getChildCells(cells[i], true, true);\n          var bounds = graph.getBoundingBoxFromGeometry(children, true);\n          \n          geo = geo.clone();\n          geo.width = Math.max(geo.width, bounds.width);\n          geo.height = Math.max(geo.height, bounds.height);\n          \n          graph.getModel().setGeometry(cells[i], geo);\n        }\n      }\n    }\n  }\n});\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose bounds should be changed."
              },
              {
                "kind": "param",
                "name": "bounds",
                "doc": "Array of `<mxRectangles>` that represent the new bounds."
              },
              {
                "kind": "param",
                "name": "recurse",
                "doc": "Optional boolean that specifies if the children should be resized."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsResized",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "bounds",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "recurse",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1476,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Resizes the parents recursively so that they contain the complete area of the resized child cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose bounds should be changed."
              },
              {
                "kind": "param",
                "name": "bounds",
                "doc": "`<mxRectangles>` that represent the new bounds."
              },
              {
                "kind": "param",
                "name": "ignoreRelative",
                "doc": "Boolean that indicates if relative cells should be ignored."
              },
              {
                "kind": "param",
                "name": "recurse",
                "doc": "Optional boolean that specifies if the children should be resized."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellResized",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "bounds",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreRelative",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "recurse",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1485,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Resizes the child cells of the given cell for the given new geometry with respect to the current geometry of the cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that has been resized."
              },
              {
                "kind": "param",
                "name": "newGeo",
                "doc": "`<mxGeometry>` that represents the new bounds."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resizeChildCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "newGeo",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1492,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Constrains the children of the given cell using `<constrainChild>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that has been resized."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "constrainChildCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1498,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Scales the points, position and size of the given cell according to the given vertical and horizontal scaling factors.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose geometry should be scaled."
              },
              {
                "kind": "param",
                "name": "dx",
                "doc": "Horizontal scaling factor."
              },
              {
                "kind": "param",
                "name": "dy",
                "doc": "Vertical scaling factor."
              },
              {
                "kind": "param",
                "name": "recurse",
                "doc": "Boolean indicating if the child cells should be scaled."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "scaleCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "dx",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "dy",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "recurse",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1507,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Resizes the parents recursively so that they contain the complete area of the resized child cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that has been resized."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "extendParent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1513,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Clones and inserts the given cells into the graph using the move method and returns the inserted cells. This shortcut is used if cells are inserted via datatransfer.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be imported."
              },
              {
                "kind": "param",
                "name": "dx",
                "doc": "Integer that specifies the x-coordinate of the vector. Default is 0."
              },
              {
                "kind": "param",
                "name": "dy",
                "doc": "Integer that specifies the y-coordinate of the vector. Default is 0."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that represents the new parent of the cells."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Mouseevent that triggered the invocation."
              },
              {
                "kind": "param",
                "name": "mapping",
                "doc": "Optional mapping for existing clones."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "importCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "dx",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "dy",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "mapping",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1524,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Moves or clones the specified cells and moves the cells or clones by the given amount, adding them to the optional target cell. The evt is the mouse event as the mouse was released. The change is carried out using `<cellsMoved>`. This method fires `<mxEvent.MOVE_CELLS>` while the transaction is in progress. Returns the cells that were moved.\n\nUse the following code to move all cells in the graph.\n```\ngraph.moveCells(graph.getChildCells(null, true, true), 10, 10);\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be moved, cloned or added to the target."
              },
              {
                "kind": "param",
                "name": "dx",
                "doc": "Integer that specifies the x-coordinate of the vector. Default is 0."
              },
              {
                "kind": "param",
                "name": "dy",
                "doc": "Integer that specifies the y-coordinate of the vector. Default is 0."
              },
              {
                "kind": "param",
                "name": "clone",
                "doc": "Boolean indicating if the cells should be cloned. Default is false."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that represents the new parent of the cells."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Mouseevent that triggered the invocation."
              },
              {
                "kind": "param",
                "name": "mapping",
                "doc": "Optional mapping for existing clones."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "moveCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "dx",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "dy",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "clone",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "mapping",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1541,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Moves the specified cells by the given vector, disconnecting the cells using disconnectGraph is disconnect is true. This method fires `<mxEvent.CELLS_MOVED>` while the transaction is in progress."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellsMoved",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1546,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Translates the geometry of the given cell and stores the new, translated geometry in the model as an atomic change."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "translateCell",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1551,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxRectangle>` inside which a cell is to be kept.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the area should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellContainmentArea",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1557,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the bounds inside which the diagram should be kept as an `<mxRectangle>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMaximumGraphBounds",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1562,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Keeps the given cell inside the bounds returned by `<getCellContainmentArea>` for its parent, according to the rules defined by `<getOverlap>` and `<isConstrainChild>`. This modifies the cell's geometry in-place and does not clone it.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "`<mxCell>` which should be constrained."
              },
              {
                "kind": "param",
                "name": "sizeFirst",
                "doc": "Specifies if the size should be changed first. Default is true."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "constrainChild",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "sizeFirst",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1569,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Resets the control points of the edges that are connected to the given cells if not both ends of the edge are in the given cells array.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` for which the connected edges should be reset."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resetEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1575,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Resets the control points of the given edge.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` whose points should be reset."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "resetEdge",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1581,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the constraint used to connect to the outline of the given state."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getOutlineConstraint",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1586,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an array of all `<mxConnectionConstraints>` for the given terminal. If the shape of the given terminal is a `<mxStencilShape>` then the constraints of the corresponding `<mxStencil>` are returned.",
            "tags": [
              {
                "kind": "param",
                "name": "terminal",
                "doc": "`<mxCellState>` that represents the terminal."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Boolean that specifies if the terminal is the source or target."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getAllConnectionConstraints",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1593,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an `<mxConnectionConstraint>` that describes the given connection point. This result can then be passed to `<getConnectionPoint>`.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCellState>` that represents the edge."
              },
              {
                "kind": "param",
                "name": "terminal",
                "doc": "`<mxCellState>` that represents the terminal."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Boolean indicating if the terminal is the source or target."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getConnectionConstraint",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1601,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the `<mxConnectionConstraint>` that describes the given connection point. If no constraint is given then nothing is changed. To remove an existing constraint from the given edge, use an empty constraint instead.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that represents the edge."
              },
              {
                "kind": "param",
                "name": "terminal",
                "doc": "`<mxCell>` that represents the terminal."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Boolean indicating if the terminal is the source or target."
              },
              {
                "kind": "param",
                "name": "constraint",
                "doc": "Optional `<mxConnectionConstraint>` to be used for this connection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setConnectionConstraint",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "constraint",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1610,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the nearest point in the list of absolute points or the center of the opposite terminal.",
            "tags": [
              {
                "kind": "param",
                "name": "vertex",
                "doc": "`<mxCellState>` that represents the vertex."
              },
              {
                "kind": "param",
                "name": "constraint",
                "doc": "`<mxConnectionConstraint>` that represents the connection point constraint as returned by `<getConnectionConstraint>`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getConnectionPoint",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "vertex",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "constraint",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1617,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Connects the specified end of the given edge to the given terminal using `<cellConnected>` and fires `<mxEvent.CONNECT_CELL>` while the transaction is in progress. Returns the updated edge.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` whose terminal should be updated."
              },
              {
                "kind": "param",
                "name": "terminal",
                "doc": "`<mxCell>` that represents the new terminal to be used."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Boolean indicating if the new terminal is the source or target."
              },
              {
                "kind": "param",
                "name": "constraint",
                "doc": "Optional `<mxConnectionConstraint>` to be used for this connection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "connectCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "constraint",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1626,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the new terminal for the given edge and resets the edge points if `<resetEdgesOnConnect>` is true. This method fires `<mxEvent.CELL_CONNECTED>` while the transaction is in progress.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` whose terminal should be updated."
              },
              {
                "kind": "param",
                "name": "terminal",
                "doc": "`<mxCell>` that represents the new terminal to be used."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Boolean indicating if the new terminal is the source or target."
              },
              {
                "kind": "param",
                "name": "constraint",
                "doc": "`<mxConnectionConstraint>` to be used for this connection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "cellConnected",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "constraint",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1635,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Disconnects the given edges from the terminals which are not in the given array.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be disconnected."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "disconnectGraph",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1641,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the current root of the displayed cell hierarchy. This is a shortcut to `<mxGraphView.currentRoot>` in `<view>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCurrentRoot",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1646,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the translation to be used if the given cell is the root cell as an `<mxPoint>`. This implementation returns null.\n\nTo keep the children at their absolute position while stepping into groups, this function can be overridden as follows.\n```\nvar offset = new mxPoint(0, 0);\n\nwhile (cell != null)\n{\n  var geo = this.model.getGeometry(cell);\n\n  if (geo != null)\n  {\n    offset.x -= geo.x;\n    offset.y -= geo.y;\n  }\n\n  cell = this.model.getParent(cell);\n}\n\nreturn offset;\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the root."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTranslateForRoot",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1672,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is a \"port\", that is, when connecting to it, the cell returned by getTerminalForPort should be used as the terminal and the port should be referenced by the ID in either the mxConstants.`STYLE_SOURCE`_PORT or the or the mxConstants.`STYLE_TARGET`_PORT. Note that a port should not be movable. This implementation always returns false.\n\nA typical implementation is the following:\n```\ngraph.isPort = function(cell)\n{\n  var geo = this.getCellGeometry(cell);\n  \n  return (geo != null) ? geo.relative : false;\n};\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the port."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isPort",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1688,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the terminal to be used for a given port. This implementation always returns the parent cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the port."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "If the cell is the source or target port."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTerminalForPort",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1695,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the offset to be used for the cells inside the given cell. The root and layer cells may be identified using `<mxGraphModel.isRoot>` and `<mxGraphModel.isLayer>`. For all other current roots, the `<mxGraphView.currentRoot>` field points to the respective cell, so that the following holds: cell == this.view.currentRoot. This implementation returns null.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose offset should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildOffsetForCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1701,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Uses the given cell as the root of the displayed cell hierarchy. If no cell is specified then the selection cell is used. The cell is only used if `<isValidRoot>` returns true.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "Optional `<mxCell>` to be used as the new root. Default is the selection cell."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "enterGroup",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1707,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Changes the current root to the next valid root in the displayed cell hierarchy."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exitGroup",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1712,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Uses the root of the model as the root of the displayed cell hierarchy and selects the previous root."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "home",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1717,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is a valid root for the cell display hierarchy. This implementation returns true for all non-null values.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` which should be checked as a possible root."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isValidRoot",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1723,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the bounds of the visible graph. Shortcut to `<mxGraphView.getGraphBounds>`. See also: `<getBoundingBoxFromGeometry>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getGraphBounds",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1728,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the scaled, translated bounds for the given cell. See `<mxGraphView.getBounds>` for arrays.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose bounds should be returned."
              },
              {
                "kind": "param",
                "name": "includeEdge",
                "doc": "Optional boolean that specifies if the bounds of the connected edges should be included. Default is false."
              },
              {
                "kind": "param",
                "name": "includeDescendants",
                "doc": "Optional boolean that specifies if the bounds of all descendants should be included. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellBounds",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeEdge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeDescendants",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1736,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the bounding box for the geometries of the vertices in the given array of cells. This can be used to find the graph bounds during a layout operation (ie. before the last endUpdate) as follows:\n```\nvar cells = graph.getChildCells(graph.getDefaultParent(), true, true);\nvar bounds = graph.getBoundingBoxFromGeometry(cells, true);\n```\n\nThis can then be used to move cells to the origin:\n```\nif (bounds.x < 0 || bounds.y < 0)\n{\n  graph.moveCells(cells, -Math.min(bounds.x, 0), -Math.min(bounds.y, 0))\n}\n```\n\nOr to translate the graph view:\n```\nif (bounds.x < 0 || bounds.y < 0)\n{\n  graph.view.setTranslate(-Math.min(bounds.x, 0), -Math.min(bounds.y, 0));\n}\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` whose bounds should be returned."
              },
              {
                "kind": "param",
                "name": "includeEdges",
                "doc": "Specifies if edge bounds should be included by computing the bounding box for all points in geometry. Default is false."
              },
              {
                "kind": "param",
                "name": "ancestors",
                "doc": "Optional array of ancestor cells to be taken into account when computing the absolute position of child cells."
              },
              {
                "kind": "param",
                "name": "includeStrokeWidth",
                "doc": "Optional boolean to indicate if the strokeWidth should be added to the bounding box. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBoundingBoxFromGeometry",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeEdges",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ancestors",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeStrokeWidth",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1765,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Clears all cell states or the states for the hierarchy starting at the given cell and validates the graph. This fires a refresh event as the last step.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "Optional `<mxCell>` for which the cell states should be cleared."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "refresh",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1771,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Snaps the given numeric value to the grid if `<gridEnabled>` is true.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Numeric value to be snapped to the grid."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "snap",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1777,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Snaps the given delta with the given scaled bounds."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "snapDelta",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1782,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Shifts the graph display by the given amount. This is used to preview panning operations, use `<mxGraphView.setTranslate>` to set a persistent translation of the view. Fires `<mxEvent.PAN>`.",
            "tags": [
              {
                "kind": "param",
                "name": "dx",
                "doc": "Amount to shift the graph along the x-axis."
              },
              {
                "kind": "param",
                "name": "dy",
                "doc": "Amount to shift the graph along the y-axis."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "panGraph",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "dx",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "dy",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1789,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Zooms into the graph by `<zoomFactor>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "zoomIn",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1794,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Zooms out of the graph by `<zoomFactor>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "zoomOut",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1799,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Resets the zoom and panning in the view."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "zoomActual",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1804,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Zooms the graph to the given scale with an optional boolean center argument, which is passd to `<zoom>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "zoomTo",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1809,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Centers the graph in the container.",
            "tags": [
              {
                "kind": "param",
                "name": "horizontal",
                "doc": "Optional boolean that specifies if the graph should be centered horizontally. Default is true."
              },
              {
                "kind": "param",
                "name": "vertical",
                "doc": "Optional boolean that specifies if the graph should be centered vertically. Default is true."
              },
              {
                "kind": "param",
                "name": "cx",
                "doc": "Optional float that specifies the horizontal center. Default is 0.5."
              },
              {
                "kind": "param",
                "name": "cy",
                "doc": "Optional float that specifies the vertical center. Default is 0.5."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "center",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "horizontal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "vertical",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cx",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cy",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1818,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Zooms the graph using the given factor. Center is an optional boolean argument that keeps the graph scrolled to the center. If the center argument is omitted, then `<centerZoom>` will be used as its value."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "zoom",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1823,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Zooms the graph to the specified rectangle. If the rectangle does not have same aspect ratio as the display container, it is increased in the smaller relative dimension only until the aspect match. The original rectangle is centralised within this expanded one.\n\nNote that the input rectangular must be un-scaled and un-translated.",
            "tags": [
              {
                "kind": "param",
                "name": "rect",
                "doc": "The un-scaled and un-translated rectangluar region that should be just visible  after the operation"
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "zoomToRect",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rect",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1831,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Pans the graph so that it shows the given cell. Optionally the cell may be centered in the container.\n\nTo center a given graph if the `<container>` has no scrollbars, use the following code.\n```\nvar bounds = graph.getGraphBounds();\ngraph.view.setTranslate(-bounds.x - (bounds.width - container.clientWidth) / 2,\n  \t\t\t\t\t   -bounds.y - (bounds.height - container.clientHeight) / 2);\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to be made visible."
              },
              {
                "kind": "param",
                "name": "center",
                "doc": "Optional boolean flag. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "scrollCellToVisible",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "center",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1845,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Pans the graph so that it shows the given rectangle.",
            "tags": [
              {
                "kind": "param",
                "name": "rect",
                "doc": "`<mxRectangle>` to be made visible."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "scrollRectToVisible",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rect",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1851,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxGeometry>` for the given cell. This implementation uses `<mxGraphModel.getGeometry>`. Subclasses can override this to implement specific geometries for cells in only one graph, that is, it can return geometries that depend on the current state of the view.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose geometry should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellGeometry",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1857,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is visible in this graph. This implementation uses `<mxGraphModel.isVisible>`. Subclassers can override this to implement specific visibility for cells in only one graph, that is, without affecting the visible state of the cell.\n\nWhen using dynamic filter expressions for cell visibility, then the graph should be revalidated after the filter expression has changed.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose visible state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellVisible",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1865,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is collapsed in this graph. This implementation uses `<mxGraphModel.isCollapsed>`. Subclassers can override this to implement specific collapsed states for cells in only one graph, that is, without affecting the collapsed state of the cell.\n\nWhen using dynamic filter expressions for the collapsed state, then the graph should be revalidated after the filter expression has changed.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose collapsed state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellCollapsed",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1873,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is connectable in this graph. This implementation uses `<mxGraphModel.isConnectable>`. Subclassers can override this to implement specific connectable states for cells in only one graph, that is, without affecting the connectable state of the cell in the model.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose connectable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellConnectable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1879,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if perimeter points should be computed such that the resulting edge has only horizontal or vertical segments.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCellState>` that represents the edge."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isOrthogonal",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1885,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell state is a loop.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` that represents a potential loop."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isLoop",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1891,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given event is a clone event. This implementation returns true if control is pressed."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCloneEvent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1896,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook for implementing click-through behaviour on selected cells. If this returns true the cell behind the selected cell will be selected. This implementation returns false;"
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isTransparentClickEvent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1901,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given event is a toggle event. This implementation returns true if the meta key (Cmd) is pressed on Macs or if control is pressed on any other platform."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isToggleEvent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1906,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given mouse event should be aligned to the grid."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isGridEnabledEvent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1911,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given mouse event should be aligned to the grid."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isConstrainedEvent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1916,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given mouse event should not allow any connections to be made. This implementation returns false."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isIgnoreTerminalEvent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1921,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Displays the given validation error in a dialog. This implementation uses mxUtils.alert."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "validationAlert",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1926,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Checks if the return value of `<getEdgeValidationError>` for the given arguments is null.  ",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that represents the edge to validate."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "`<mxCell>` that represents the source terminal."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that represents the target terminal."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEdgeValid",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1934,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the validation error message to be displayed when inserting or changing an edges' connectivity. A return value of null means the edge is valid, a return value of '' means it's not valid, but do not display an error message. Any other (non-empty) string returned from this method is displayed as an error message when trying to connect an edge to a source and target. This implementation uses the `<multiplicities>`, and checks `<multigraph>`, `<allowDanglingEdges>` and `<allowLoops>` to generate validation errors.\n\nFor extending this method with specific checks for source/target cells, the method can be extended as follows. Returning an empty string means the edge is invalid with no error message, a non-null string specifies the error message, and null means the edge is valid.\n```\ngraph.getEdgeValidationError = function(edge, source, target)\n{\n  if (source != null && target != null &&\n    this.model.getValue(source) != null &&\n    this.model.getValue(target) != null)\n  {\n    if (target is not valid for source)\n    {\n      return 'Invalid Target';\n    }\n  }\n  \n  // \"Supercall\"\n  return mxGraph.prototype.getEdgeValidationError.apply(this, arguments);\n}\n```",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that represents the edge to validate."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "`<mxCell>` that represents the source terminal."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that represents the target terminal."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEdgeValidationError",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1961,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook method for subclassers to return an error message for the given edge and terminals. This implementation returns null.",
            "tags": [
              {
                "kind": "param",
                "name": "edge",
                "doc": "`<mxCell>` that represents the edge to validate."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "`<mxCell>` that represents the source terminal."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that represents the target terminal."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "validateEdge",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1969,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Validates the graph by validating each descendant of the given cell or the root of the model. Context is an object that contains the validation state for the complete validation run. The validation errors are attached to their cells using `<setCellWarning>`. Returns null in the case of successful validation or an array of strings (warnings) in the case of failed validations.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "Optional `<mxCell>` to start the validation recursion. Default is the graph root."
              },
              {
                "kind": "param",
                "name": "context",
                "doc": "Object that represents the global validation state."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "validateGraph",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "context",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1976,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Checks all `<multiplicities>` that cannot be enforced while the graph is being modified, namely, all multiplicities that require a minimum of 1 edge.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the multiplicities should be checked."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellValidationError",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1982,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook method for subclassers to return an error message for the given cell and validation context. This implementation returns null. Any HTML breaks will be converted to linefeeds in the calling method.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the cell to validate."
              },
              {
                "kind": "param",
                "name": "context",
                "doc": "Object that represents the global validation state."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "validateCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "context",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1989,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<backgroundImage>` as an `<mxImage>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBackgroundImage",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 1994,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the new `<backgroundImage>`.",
            "tags": [
              {
                "kind": "param",
                "name": "image",
                "doc": "New `<mxImage>` to be used for the background."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBackgroundImage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "image",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2000,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxImage>` used to display the collapsed state of the specified cell state. This returns null for all edges."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getFoldingImage",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2005,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the textual representation for the given cell. This implementation returns the nodename or string-representation of the user object.\n\nThe following returns the label attribute from the cells user object if it is an XML node.\n```\ngraph.convertValueToString = function(cell)\n{\n  return cell.getAttribute('label');\n}\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose textual representation should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "convertValueToString",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2019,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a string or DOM node that represents the label for the given cell. This implementation uses `<convertValueToString>` if `<labelsVisible>` is true. Otherwise it returns an empty string.\n\nTo truncate a label to match the size of the cell, the following code can be used.\n```\ngraph.getLabel = function(cell)\n{\n  var label = mxGraph.prototype.getLabel.apply(this, arguments);\n\n  if (label != null && this.model.isVertex(cell))\n  {\n    var geo = this.getCellGeometry(cell);\n\n    if (geo != null)\n    {\n      var max = parseInt(geo.width / 8);\n\n      if (label.length > max)\n      {\n        label = label.substring(0, max)+'...';\n      }\n    }\n  } \n  return mxUtils.htmlEntities(label);\n}\n```\n\nA resize listener is needed in the graph to force a repaint of the label after a resize.\n```\ngraph.addListener(mxEvent.RESIZE_CELLS, function(sender, evt)\n{\n  var cells = evt.getProperty('cells');\n\n  for (var i = 0; i < cells.length; i++)\n  {\n    this.view.removeState(cells[i]);\n  }\n});\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose label should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getLabel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2062,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the label must be rendered as HTML markup. The default implementation returns `<htmlLabels>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose label should be displayed as HTML markup."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isHtmlLabel",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2068,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<htmlLabels>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isHtmlLabels",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2073,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<htmlLabels>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setHtmlLabels",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2078,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "This enables wrapping for HTML labels.\n\nReturns true if no white-space CSS style directive should be used for displaying the given cells label. This implementation returns true if `<mxConstants.STYLE_WHITE_SPACE>` in the style of the given cell is 'wrap'.\n\nThis is used as a workaround for IE ignoring the white-space directive of child elements if the directive appears in a parent element. It should be overridden to return true if a white-space directive is used in the HTML markup that represents the given cells label. In order for HTML markup to work in labels, `<isHtmlLabel>` must also return true for the given cell.\n```\ngraph.getLabel = function(cell)\n{\n  var tmp = mxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\n  \n  if (this.model.isEdge(cell))\n  {\n    tmp = '<div style=\"width: 150px; white-space:normal;\">'+tmp+'</div>';\n  }\n  \n  return tmp;\n}\n\ngraph.isWrapping = function(state)\n{\n\t return this.model.isEdge(state.cell);\n}\n```",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCell>` whose label should be wrapped."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isWrapping",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2106,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the overflow portion of labels should be hidden. If this returns true then vertex labels will be clipped to the size of the vertices. This implementation returns true if `<mxConstants.STYLE_OVERFLOW>` in the style of the given cell is 'hidden'.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCell>` whose label should be clipped."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isLabelClipped",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2112,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the string or DOM node that represents the tooltip for the given state, node and coordinate pair. This implementation checks if the given node is a folding icon or overlay and returns the respective tooltip. If this does not result in a tooltip, the handler for the cell is retrieved from `<selectionCellsHandler>` and the optional getTooltipForNode method is called. If no special tooltip exists here then `<getTooltipForCell>` is used with the cell in the given state as the argument to return a tooltip for the given state.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` whose tooltip should be returned."
              },
              {
                "kind": "param",
                "name": "node",
                "doc": "DOM node that is currently under the mouse."
              },
              {
                "kind": "param",
                "name": "x",
                "doc": "X-coordinate of the mouse."
              },
              {
                "kind": "param",
                "name": "y",
                "doc": "Y-coordinate of the mouse."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTooltip",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "node",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "x",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2121,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the string or DOM node to be used as the tooltip for the given cell. This implementation uses the cells getTooltip function if it exists, or else it returns `<convertValueToString>` for the cell.\n```\ngraph.getTooltipForCell = function(cell)\n{\n  return 'Hello, World!';\n}\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose tooltip should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTooltipForCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2133,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the string to be used as the link for the given cell. This implementation returns null.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose link should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getLinkForCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2139,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the string to be used as the link target for the given cell. This implementation returns null.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose link target should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getLinkTargetForCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2145,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cursor value to be used for the CSS of the shape for the given event. This implementation calls `<getCursorForCell>`.",
            "tags": [
              {
                "kind": "param",
                "name": "me",
                "doc": "`<mxMouseEvent>` whose cursor should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCursorForMouseEvent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "me",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2151,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cursor value to be used for the CSS of the shape for the given cell. This implementation returns null.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose cursor should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCursorForCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2157,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the start size of the given swimlane, that is, the width or height of the part that contains the title, depending on the horizontal style. The return value is an `<mxRectangle>` with either width or height set as appropriate.",
            "tags": [
              {
                "kind": "param",
                "name": "swimlane",
                "doc": "`<mxCell>` whose start size should be returned."
              },
              {
                "kind": "param",
                "name": "ignoreState",
                "doc": "Optional boolean that specifies if cell state should be ignored."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getStartSize",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "swimlane",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreState",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2164,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the direction for the given swimlane style."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSwimlaneDirection",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2169,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the actual start size of the given swimlane taking into account direction and horizontal and vertial flip styles. The start size is returned as an `<mxRectangle>` where top, left, bottom, right start sizes are returned as x, y, height and width, respectively.",
            "tags": [
              {
                "kind": "param",
                "name": "swimlane",
                "doc": "`<mxCell>` whose start size should be returned."
              },
              {
                "kind": "param",
                "name": "ignoreState",
                "doc": "Optional boolean that specifies if cell state should be ignored."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getActualStartSize",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "swimlane",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreState",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2176,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the image URL for the given cell state. This implementation returns the value stored under `<mxConstants.STYLE_IMAGE>` in the cell style.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` whose image URL should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getImage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2182,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given state has no stroke- or fillcolor and no image.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` to check."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isTransparentState",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2188,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the vertical alignment for the given cell state. This implementation returns the value stored under `<mxConstants.STYLE_VERTICAL_ALIGN>` in the cell style.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` whose vertical alignment should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getVerticalAlign",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2194,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the indicator color for the given cell state. This implementation returns the value stored under `<mxConstants.STYLE_INDICATOR_COLOR>` in the cell style.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` whose indicator color should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getIndicatorColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2200,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the indicator gradient color for the given cell state. This implementation returns the value stored under `<mxConstants.STYLE_INDICATOR_GRADIENTCOLOR>` in the cell style.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` whose indicator gradient color should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getIndicatorGradientColor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2206,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the indicator shape for the given cell state. This implementation returns the value stored under `<mxConstants.STYLE_INDICATOR_SHAPE>` in the cell style.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` whose indicator shape should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getIndicatorShape",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2212,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the indicator image for the given cell state. This implementation returns the value stored under `<mxConstants.STYLE_INDICATOR_IMAGE>` in the cell style.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` whose indicator image should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getIndicatorImage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2218,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the value of `<border>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBorder",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2223,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the value of `<border>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Positive integer that represents the border to be used."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBorder",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2229,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is a swimlane in the graph. A swimlane is a container cell with some specific behaviour. This implementation checks if the shape associated with the given cell is a `<mxSwimlane>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to be checked."
              },
              {
                "kind": "param",
                "name": "ignoreState",
                "doc": "Optional boolean that specifies if the cell state should be ignored."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSwimlane",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreState",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2236,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<resizeContainer>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isResizeContainer",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2241,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<resizeContainer>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the container should be resized."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setResizeContainer",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2247,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the graph is `<enabled>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEnabled",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2252,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow any interactions. This implementation updates `<enabled>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the graph should be enabled."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setEnabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2258,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<escapeEnabled>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEscapeEnabled",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2263,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<escapeEnabled>`.",
            "tags": [
              {
                "kind": "param",
                "name": "enabled",
                "doc": "Boolean indicating if escape should be enabled."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setEscapeEnabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "enabled",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2269,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<invokesStopCellEditing>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isInvokesStopCellEditing",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2274,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<invokesStopCellEditing>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setInvokesStopCellEditing",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2279,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<enterStopsCellEditing>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEnterStopsCellEditing",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2284,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<enterStopsCellEditing>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setEnterStopsCellEditing",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2289,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell may not be moved, sized, bended, disconnected, edited or selected. This implementation returns true for all vertices with a relative geometry if `<locked>` is false.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose locked state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellLocked",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2295,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell may not be moved, sized, bended, disconnected, edited or selected. This implementation returns true for all vertices with a relative geometry if `<locked>` is false.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose locked state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellsLocked",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2301,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets if any cell may be moved, sized, bended, disconnected, edited or selected.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean that defines the new value for `<cellsLocked>`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellsLocked",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2307,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells which may be exported in the given array of cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCloneableCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2312,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is cloneable. This implementation returns `<isCellsCloneable>` for all cells unless a cell style specifies `<mxConstants.STYLE_CLONEABLE>` to be 0. ",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "Optional `<mxCell>` whose cloneable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellCloneable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2318,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<cellsCloneable>`, that is, if the graph allows cloning of cells by using control-drag."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellsCloneable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2323,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow cloning of cells by holding down the control key while cells are being moved. This implementation updates `<cellsCloneable>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the graph should be cloneable."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellsCloneable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2329,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells which may be exported in the given array of cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getExportableCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2334,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell may be exported to the clipboard. This implementation returns `<exportEnabled>` for all cells.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the cell to be exported."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "canExportCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2340,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells which may be imported in the given array of cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getImportableCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2345,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell may be imported from the clipboard. This implementation returns `<importEnabled>` for all cells.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the cell to be imported."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "canImportCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2351,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is selectable. This implementation returns `<cellsSelectable>`.\n\nTo add a new style for making cells (un)selectable, use the following code.\n```\nmxGraph.prototype.isCellSelectable = function(cell)\n{\n  var style = this.getCurrentCellStyle(cell);\n  \n  return this.isCellsSelectable() && !this.isCellLocked(cell) && style['selectable'] != 0;\n};\n```\n\nYou can then use the new style as shown in this example.\n```\ngraph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'selectable=0');\n```",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose selectable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellSelectable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2372,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<cellsSelectable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellsSelectable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2377,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<cellsSelectable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellsSelectable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2382,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells which may be exported in the given array of cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getDeletableCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2387,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is moveable. This returns `<cellsDeletable>` for all given cells if a cells style does not specify `<mxConstants.STYLE_DELETABLE>` to be 0.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose deletable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellDeletable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2393,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<cellsDeletable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellsDeletable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2398,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<cellsDeletable>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the graph should allow deletion of cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellsDeletable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2404,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given edges's label is moveable. This returns `<movable>` for all given cells if `<isLocked>` does not return true for the given cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose label should be moved."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isLabelMovable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2410,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells which are rotatable in the given array of cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getRotatableCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2415,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is rotatable. This returns true for the given cell if its style does not specify `<mxConstants.STYLE_ROTATABLE>` to be 0.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose rotatable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellRotatable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2421,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells which are movable in the given array of cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getMovableCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2426,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is moveable. This returns `<cellsMovable>` for all given cells if `<isCellLocked>` does not return true for the given cell and its style does not specify `<mxConstants.STYLE_MOVABLE>` to be 0.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose movable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellMovable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2432,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<cellsMovable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellsMovable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2437,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow moving of cells. This implementation updates `<cellsMsovable>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the graph should allow moving of cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellsMovable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2443,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<gridEnabled>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isGridEnabled",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2448,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the grid should be enabled.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the grid should be enabled."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setGridEnabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2454,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<portsEnabled>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isPortsEnabled",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2459,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the ports should be enabled.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the ports should be enabled."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPortsEnabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2465,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<gridSize>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getGridSize",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2470,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<gridSize>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setGridSize",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2475,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<tolerance>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getTolerance",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2480,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<tolerance>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTolerance",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2485,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<vertexLabelsMovable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isVertexLabelsMovable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2490,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<vertexLabelsMovable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setVertexLabelsMovable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2495,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<edgeLabelsMovable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEdgeLabelsMovable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2500,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<edgeLabelsMovable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEdgeLabelsMovable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2505,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<swimlaneNesting>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSwimlaneNesting",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2510,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if swimlanes can be nested by drag and drop. This is only taken into account if dropEnabled is true.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if swimlanes can be nested."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setSwimlaneNesting",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2516,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<swimlaneSelectionEnabled>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSwimlaneSelectionEnabled",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2521,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if swimlanes should be selected if the mouse is released over their content area.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if swimlanes content areas should be selected when the mouse is released over them."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setSwimlaneSelectionEnabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2527,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<multigraph>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isMultigraph",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2532,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow multiple connections between the same pair of vertices.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the graph allows multiple connections between the same pair of vertices."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setMultigraph",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2538,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<allowLoops>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isAllowLoops",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2543,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if dangling edges are allowed, that is, if edges are allowed that do not have a source and/or target terminal defined.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if dangling edges are allowed."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAllowDanglingEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2549,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<allowDanglingEdges>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isAllowDanglingEdges",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2554,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges should be connectable.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if edges should be connectable."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setConnectableEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2560,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<connectableEdges>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isConnectableEdges",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2565,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges should be inserted when cloned but not valid wrt. `<getEdgeValidationError>`. If false such edges will be silently ignored.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if cloned invalid edges should be inserted into the graph or ignored."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCloneInvalidEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2571,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<cloneInvalidEdges>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCloneInvalidEdges",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2576,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if loops are allowed.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if loops are allowed."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAllowLoops",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2582,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<disconnectOnMove>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isDisconnectOnMove",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2587,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if edges should be disconnected when moved. (Note: Cloned edges are always disconnected.)",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if edges should be disconnected when moved."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDisconnectOnMove",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2593,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<dropEnabled>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isDropEnabled",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2598,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow dropping of cells onto or into other cells.",
            "tags": [
              {
                "kind": "param",
                "name": "dropEnabled",
                "doc": "Boolean indicating if the graph should allow dropping of cells into other cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDropEnabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "dropEnabled",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2604,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<splitEnabled>` as a boolean."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSplitEnabled",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2609,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow dropping of cells onto or into other cells.",
            "tags": [
              {
                "kind": "param",
                "name": "dropEnabled",
                "doc": "Boolean indicating if the graph should allow dropping of cells into other cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setSplitEnabled",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "dropEnabled",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2615,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all cells that are resizable and not locked."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getResizableCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2620,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is resizable. This returns `<cellsResizable>` for all given cells if `<isCellLocked>` does not return true for the given cell and its style does not specify `<mxConstants.STYLE_RESIZABLE>` to be 0.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose resizable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellResizable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2626,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<cellsResizable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellsResizable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2631,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow resizing of cells. This implementation updates `<cellsResizable>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the graph should allow resizing of cells."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellsResizable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2637,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given terminal point is movable. This is independent from `<isCellConnectable>` and `<isCellDisconnectable>` and controls if terminal points can be moved in the graph if the edge is not connected. Note that it is required for this to return true to connect unconnected edges. This implementation returns true.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose terminal point should be moved."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Boolean indicating if the source or target terminal should be moved."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isTerminalPointMovable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2644,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is bendable. This returns `<cellsBendable>` for all given cells if `<isLocked>` does not return true for the given cell and its style does not specify `<mxConstants.STYLE_BENDABLE>` to be 0.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose bendable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellBendable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2650,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<cellsBenadable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellsBendable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2655,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow bending of edges. This implementation updates `<bendable>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the graph should allow bending of edges."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellsBendable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2661,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all cells that are editable and not locked."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEditableCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2666,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is editable. This returns `<cellsEditable>` for all given cells if `<isCellLocked>` does not return true for the given cell and its style does not specify `<mxConstants.STYLE_EDITABLE>` to be 0.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose editable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellEditable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2672,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<cellsEditable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellsEditable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2677,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow in-place editing for cell labels. This implementation updates `<cellsEditable>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if the graph should allow in-place editing."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellsEditable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2683,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is disconnectable from the source or target terminal. This returns `<isCellsDisconnectable>` for all given cells if `<isCellLocked>` does not return true for the given cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose disconnectable state should be returned."
              },
              {
                "kind": "param",
                "name": "terminal",
                "doc": "`<mxCell>` that represents the source or target terminal."
              },
              {
                "kind": "param",
                "name": "source",
                "doc": "Boolean indicating if the source or target terminal is to be disconnected."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellDisconnectable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2691,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<cellsDisconnectable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellsDisconnectable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2696,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<cellsDisconnectable>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCellsDisconnectable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2701,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is a valid source for new connections. This implementation returns true for all non-null values and is called by is called by `<isValidConnection>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents a possible source or null."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isValidSource",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2707,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<isValidSource>` for the given cell. This is called by `<isValidConnection>`.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents a possible target or null."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isValidTarget",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2713,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given target cell is a valid target for source. This is a boolean implementation for not allowing connections between certain pairs of vertices and is called by `<getEdgeValidationError>`. This implementation returns true if `<isValidSource>` returns true for the source and `<isValidTarget>` returns true for the target.",
            "tags": [
              {
                "kind": "param",
                "name": "source",
                "doc": "`<mxCell>` that represents the source cell."
              },
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that represents the target cell."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isValidConnection",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "source",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2720,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if the graph should allow new connections. This implementation updates `<mxConnectionHandler.enabled>` in `<connectionHandler>`.",
            "tags": [
              {
                "kind": "param",
                "name": "connectable",
                "doc": "Boolean indicating if new connections should be allowed."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setConnectable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "connectable",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2726,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the `<connectionHandler>` is enabled."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isConnectable",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2731,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if tooltips should be enabled. This implementation updates `<mxTooltipHandler.enabled>` in `<tooltipHandler>`.",
            "tags": [
              {
                "kind": "param",
                "name": "enabled",
                "doc": "Boolean indicating if tooltips should be enabled."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setTooltips",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "enabled",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2737,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if panning should be enabled. This implementation updates `<mxPanningHandler.panningEnabled>` in `<panningHandler>`.",
            "tags": [
              {
                "kind": "param",
                "name": "enabled",
                "doc": "Boolean indicating if panning should be enabled."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPanning",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "enabled",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2743,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is currently being edited. If no cell is specified then this returns true if any cell is currently being edited.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that should be checked."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEditing",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2749,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the size of the given cell should automatically be updated after a change of the label. This implementation returns `<autoSizeCells>` or checks if the cell style does specify `<mxConstants.STYLE_AUTOSIZE>` to be 1.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that should be resized."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isAutoSizeCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2755,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<autoSizeCells>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isAutoSizeCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2760,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Specifies if cell sizes should be automatically updated after a label change. This implementation sets `<autoSizeCells>` to the given parameter. To update the size of cells when the cells are added, set `<autoSizeCellsOnAdd>` to true.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "Boolean indicating if cells should be resized automatically."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setAutoSizeCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2766,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the parent of the given cell should be extended if the child has been resized so that it overlaps the parent. This implementation returns `<isExtendParents>` if the cell is not an edge.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that has been resized."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isExtendParent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2772,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<extendParents>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isExtendParents",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2777,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<extendParents>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "New boolean value for `<extendParents>`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setExtendParents",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2783,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<extendParentsOnAdd>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isExtendParentsOnAdd",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2788,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<extendParentsOnAdd>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "New boolean value for `<extendParentsOnAdd>`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setExtendParentsOnAdd",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2794,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<extendParentsOnMove>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isExtendParentsOnMove",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2799,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<extendParentsOnMove>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "New boolean value for `<extendParentsOnAdd>`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setExtendParentsOnMove",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2805,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<recursiveResize>`.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` that is being resized."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isRecursiveResize",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2811,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<recursiveResize>`.",
            "tags": [
              {
                "kind": "param",
                "name": "value",
                "doc": "New boolean value for `<recursiveResize>`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setRecursiveResize",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "value",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2817,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell should be kept inside the bounds of its parent according to the rules defined by `<getOverlap>` and `<isAllowOverlapParent>`. This implementation returns false for all children of edges and `<isConstrainChildren>` otherwise.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that should be constrained."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isConstrainChild",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2823,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<constrainChildren>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isConstrainChildren",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2828,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<constrainChildren>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setConstrainChildren",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2833,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<constrainRelativeChildren>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isConstrainRelativeChildren",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2838,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<constrainRelativeChildren>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setConstrainRelativeChildren",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2843,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<allowNegativeCoordinates>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isConstrainChildren",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2848,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets `<allowNegativeCoordinates>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setConstrainChildren",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2853,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns a decimal number representing the amount of the width and height of the given cell that is allowed to overlap its parent. A value of 0 means all children must stay inside the parent, 1 means the child is allowed to be placed outside of the parent such that it touches one of the parents sides. If `<isAllowOverlapParent>` returns false for the given cell, then this method returns 0.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the overlap ratio should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getOverlap",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2859,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is allowed to be placed outside of the parents area.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the child to be checked."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isAllowOverlapParent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2865,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the cells which are movable in the given array of cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getFoldableCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2870,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is foldable. This implementation returns true if the cell has at least one child and its style does not specify `<mxConstants.STYLE_FOLDABLE>` to be 0.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose foldable state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellFoldable",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2876,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is a valid drop target for the specified cells. If `<splitEnabled>` is true then this returns `<isSplitTarget>` for the given arguments else it returns true if the cell is not collapsed and its child count is greater than 0.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that represents the possible drop target."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "`<mxCells>` that should be dropped into the target."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Mouseevent that triggered the invocation."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isValidDropTarget",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2884,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given edge may be splitted into two edges with the given cell as a new terminal between the two.",
            "tags": [
              {
                "kind": "param",
                "name": "target",
                "doc": "`<mxCell>` that represents the edge to be splitted."
              },
              {
                "kind": "param",
                "name": "cells",
                "doc": "`<mxCells>` that should split the edge."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Mouseevent that triggered the invocation."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSplitTarget",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "target",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2892,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the given cell if it is a drop target for the given cells or the nearest ancestor that may be used as a drop target for the given cells. If the given array contains a swimlane and `<swimlaneNesting>` is false then this always returns null. If no cell is given, then the bottommost swimlane at the location of the given event is returned.\n\nThis function should only be used if `<isDropEnabled>` returns true.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` which are to be dropped onto the target."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Mouseevent for the drag and drop."
              },
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` that is under the mousepointer."
              },
              {
                "kind": "param",
                "name": "clone",
                "doc": "Optional boolean to indicate of cells will be cloned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getDropTarget",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "clone",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2903,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns `<defaultParent>` or `<mxGraphView.currentRoot>` or the first child child of `<mxGraphModel.root>` if both are null. The value returned by this function should be used as the parent for new cells (aka default layer)."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getDefaultParent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2908,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the `<defaultParent>` to the given cell. Set this to null to return the first child of the root in getDefaultParent."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDefaultParent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2913,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the nearest ancestor of the given cell which is a swimlane, or the given cell, if it is itself a swimlane.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the ancestor swimlane should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSwimlane",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2919,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the bottom-most swimlane that intersects the given point (x, y) in the cell hierarchy that starts at the given parent.",
            "tags": [
              {
                "kind": "param",
                "name": "x",
                "doc": "X-coordinate of the location to be checked."
              },
              {
                "kind": "param",
                "name": "y",
                "doc": "Y-coordinate of the location to be checked."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that should be used as the root of the recursion. Default is `<defaultParent>`."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSwimlaneAt",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "x",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2927,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the bottom-most cell that intersects the given point (x, y) in the cell hierarchy starting at the given parent. This will also return swimlanes if the given location intersects the content area of the swimlane. If this is not desired, then the `<hitsSwimlaneContent>` may be used if the returned cell is a swimlane to determine if the location is inside the content area or on the actual title of the swimlane.",
            "tags": [
              {
                "kind": "param",
                "name": "x",
                "doc": "X-coordinate of the location to be checked."
              },
              {
                "kind": "param",
                "name": "y",
                "doc": "Y-coordinate of the location to be checked."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that should be used as the root of the recursion. Default is current root of the view or the root of the model."
              },
              {
                "kind": "param",
                "name": "vertices",
                "doc": "Optional boolean indicating if vertices should be returned. Default is true."
              },
              {
                "kind": "param",
                "name": "edges",
                "doc": "Optional boolean indicating if edges should be returned. Default is true."
              },
              {
                "kind": "param",
                "name": "ignoreFn",
                "doc": "Optional function that returns true if cell should be ignored. The function is passed the cell state and the x and y parameter."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellAt",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "x",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "vertices",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "edges",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreFn",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2938,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the bottom-most cell that intersects the given point (x, y) in the cell hierarchy that starts at the given parent.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` that represents the cell state."
              },
              {
                "kind": "param",
                "name": "x",
                "doc": "X-coordinate of the location to be checked."
              },
              {
                "kind": "param",
                "name": "y",
                "doc": "Y-coordinate of the location to be checked."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "intersects",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "x",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2946,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given coordinate pair is inside the content area of the given swimlane.",
            "tags": [
              {
                "kind": "param",
                "name": "swimlane",
                "doc": "`<mxCell>` that specifies the swimlane."
              },
              {
                "kind": "param",
                "name": "x",
                "doc": "X-coordinate of the mouse event."
              },
              {
                "kind": "param",
                "name": "y",
                "doc": "Y-coordinate of the mouse event."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "hitsSwimlaneContent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "swimlane",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "x",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2954,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the visible child vertices of the given parent.",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` whose children should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildVertices",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2960,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the visible child edges of the given parent.",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` whose child vertices should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2966,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the visible child vertices or edges in the given parent. If vertices and edges is false, then all children are returned.",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` whose children should be returned."
              },
              {
                "kind": "param",
                "name": "vertices",
                "doc": "Optional boolean that specifies if child vertices should be returned. Default is false."
              },
              {
                "kind": "param",
                "name": "edges",
                "doc": "Optional boolean that specifies if child edges should be returned. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getChildCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "vertices",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "edges",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2974,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all visible edges connected to the given cell without loops.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose connections should be returned."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "Optional parent of the opposite end for a connection to be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getConnections",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2981,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the visible incoming edges for the given cell. If the optional parent argument is specified, then only child edges of the given parent are returned.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose incoming edges should be returned."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "Optional parent of the opposite end for an edge to be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getIncomingEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2988,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the visible outgoing edges for the given cell. If the optional parent argument is specified, then only child edges of the given parent are returned.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose outgoing edges should be returned."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "Optional parent of the opposite end for an edge to be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getOutgoingEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 2995,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the incoming and/or outgoing edges for the given cell. If the optional parent argument is specified, then only edges are returned where the opposite is in the given parent cell. If at least one of incoming or outgoing is true, then loops are ignored, if both are false, then all edges connected to the given cell are returned including loops.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` whose edges should be returned."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "Optional parent of the opposite end for an edge to be returned."
              },
              {
                "kind": "param",
                "name": "incoming",
                "doc": "Optional boolean that specifies if incoming edges should be included in the result. Default is true."
              },
              {
                "kind": "param",
                "name": "outgoing",
                "doc": "Optional boolean that specifies if outgoing edges should be included in the result. Default is true."
              },
              {
                "kind": "param",
                "name": "includeLoops",
                "doc": "Optional boolean that specifies if loops should be included in the result. Default is true."
              },
              {
                "kind": "param",
                "name": "recurse",
                "doc": "Optional boolean the specifies if the parent specified only  need be an ancestral parent, true, or the direct parent, false. Default is false"
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEdges",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "incoming",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "outgoing",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeLoops",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "recurse",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3006,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns whether or not the specified parent is a valid ancestor of the specified cell, either direct or indirectly based on whether ancestor recursion is enabled.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` the possible child cell"
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` the possible parent cell"
              },
              {
                "kind": "param",
                "name": "recurse",
                "doc": "boolean whether or not to recurse the child ancestors"
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isValidAncestor",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "recurse",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3014,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all distinct visible opposite cells for the specified terminal on the given edges.",
            "tags": [
              {
                "kind": "param",
                "name": "edges",
                "doc": "Array of `<mxCells>` that contains the edges whose opposite terminals should be returned."
              },
              {
                "kind": "param",
                "name": "terminal",
                "doc": "Terminal that specifies the end whose opposite should be returned."
              },
              {
                "kind": "param",
                "name": "sources",
                "doc": "Optional boolean that specifies if source terminals should be included in the result. Default is true."
              },
              {
                "kind": "param",
                "name": "targets",
                "doc": "Optional boolean that specifies if targer terminals should be included in the result. Default is true."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getOpposites",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "edges",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "terminal",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "sources",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "targets",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3023,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the edges between the given source and target. This takes into account collapsed and invisible cells and returns the connected edges as displayed on the screen."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEdgesBetween",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3028,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns an `<mxPoint>` representing the given event in the unscaled, non-translated coordinate space of `<container>` and applies the grid.",
            "tags": [
              {
                "kind": "param",
                "name": "evt",
                "doc": "Mousevent that contains the mouse pointer location."
              },
              {
                "kind": "param",
                "name": "addOffset",
                "doc": "Optional boolean that specifies if the position should be offset by half of the `<gridSize>`. Default is true."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getPointForEvent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "addOffset",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3035,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the child vertices and edges of the given parent that are contained in the given rectangle. The result is added to the optional result array, which is returned. If no result array is specified then a new array is created and returned.",
            "tags": [
              {
                "kind": "param",
                "name": "x",
                "doc": "X-coordinate of the rectangle."
              },
              {
                "kind": "param",
                "name": "y",
                "doc": "Y-coordinate of the rectangle."
              },
              {
                "kind": "param",
                "name": "width",
                "doc": "Width of the rectangle."
              },
              {
                "kind": "param",
                "name": "height",
                "doc": "Height of the rectangle."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` that should be used as the root of the recursion. Default is current root of the view or the root of the model."
              },
              {
                "kind": "param",
                "name": "result",
                "doc": "Optional array to store the result in."
              },
              {
                "kind": "param",
                "name": "intersection",
                "doc": "Optional `<mxRectangle>` to check shapes for intersection."
              },
              {
                "kind": "param",
                "name": "ignoreFn",
                "doc": "Optional function to check if a cell state is ignored."
              },
              {
                "kind": "param",
                "name": "includeDescendants",
                "doc": "Optional boolean flag to add descendants to the result. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "x",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "y",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "width",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "height",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "result",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "intersection",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "ignoreFn",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "includeDescendants",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3049,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the children of the given parent that are contained in the halfpane from the given point (x0, y0) rightwards or downwards depending on rightHalfpane and bottomHalfpane.",
            "tags": [
              {
                "kind": "param",
                "name": "x0",
                "doc": "X-coordinate of the origin."
              },
              {
                "kind": "param",
                "name": "y0",
                "doc": "Y-coordinate of the origin."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "Optional `<mxCell>` whose children should be checked. Default is `<defaultParent>`."
              },
              {
                "kind": "param",
                "name": "rightHalfpane",
                "doc": "Boolean indicating if the cells in the right halfpane from the origin should be returned."
              },
              {
                "kind": "param",
                "name": "bottomHalfpane",
                "doc": "Boolean indicating if the cells in the bottom halfpane from the origin should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getCellsBeyond",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "x0",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "y0",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "rightHalfpane",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "bottomHalfpane",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3059,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns all children in the given parent which do not have incoming edges. If the result is empty then the with the greatest difference between incoming and outgoing edges is returned.",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "`<mxCell>` whose children should be checked."
              },
              {
                "kind": "param",
                "name": "isolate",
                "doc": "Optional boolean that specifies if edges should be ignored if the opposite end is not a child of the given parent cell. Default is false."
              },
              {
                "kind": "param",
                "name": "invert",
                "doc": "Optional boolean that specifies if outgoing or incoming edges should be counted for a tree root. If false then outgoing edges will be counted. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "findTreeRoots",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "isolate",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "invert",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3067,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Traverses the (directed) graph invoking the given function for each visited vertex and edge. The function is invoked with the current vertex and the incoming edge as a parameter. This implementation makes sure each vertex is only visited once. The function may return false if the traversal should stop at the given vertex.\n```\nmxLog.show();\nvar cell = graph.getSelectionCell();\ngraph.traverse(cell, false, function(vertex, edge)\n{\n  mxLog.debug(graph.getLabel(vertex));\n});\n```",
            "tags": [
              {
                "kind": "param",
                "name": "vertex",
                "doc": "`<mxCell>` that represents the vertex where the traversal starts."
              },
              {
                "kind": "param",
                "name": "directed",
                "doc": "Optional boolean indicating if edges should only be traversed from source to target. Default is true."
              },
              {
                "kind": "param",
                "name": "func",
                "doc": "Visitor function that takes the current vertex and the incoming edge as arguments. The traversal stops if the function returns false."
              },
              {
                "kind": "param",
                "name": "edge",
                "doc": "Optional `<mxCell>` that represents the incoming edge. This is null for the first step of the traversal."
              },
              {
                "kind": "param",
                "name": "visited",
                "doc": "Optional `<mxDictionary>` from edges to true for the visited cells."
              },
              {
                "kind": "param",
                "name": "inverse",
                "doc": "Optional boolean to traverse in inverse direction. Default is false. This is ignored if directed is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "traverse",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "vertex",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "directed",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "func",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "edge",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "visited",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "inverse",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3086,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell is selected.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` for which the selection state should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isCellSelected",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3092,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given cell and parent should propagate selection state to the parent."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isAncestorSelected",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3097,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the selection is empty."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSelectionEmpty",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3102,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Clears the selection using `<mxGraphSelectionModel.clear>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "clearSelection",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3107,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the number of selected cells."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSelectionCount",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3112,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the first cell from the array of selected `<mxCells>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSelectionCell",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3117,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the array of selected `<mxCells>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getSelectionCells",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3122,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the selection cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to be selected."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setSelectionCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3128,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the selection cell.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be selected."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setSelectionCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3134,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds the given cell to the selection.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to be add to the selection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addSelectionCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3140,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds the given cells to the selection.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be added to the selection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addSelectionCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3146,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the given cell from the selection.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to be removed from the selection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeSelectionCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3152,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the given cells from the selection.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be removed from the selection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeSelectionCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3158,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects and returns the cells inside the given rectangle for the specified event.",
            "tags": [
              {
                "kind": "param",
                "name": "rect",
                "doc": "`<mxRectangle>` that represents the region to be selected."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Mouseevent that triggered the selection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectRegion",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "rect",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3165,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects the next cell."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectNextCell",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3170,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects the previous cell."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectPreviousCell",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3175,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects the parent cell."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectParentCell",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3180,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects the first child cell."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectChildCell",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3185,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects the next, parent, first child or previous cell, if all arguments are false.",
            "tags": [
              {
                "kind": "param",
                "name": "isNext",
                "doc": "Boolean indicating if the next cell should be selected."
              },
              {
                "kind": "param",
                "name": "isParent",
                "doc": "Boolean indicating if the parent cell should be selected."
              },
              {
                "kind": "param",
                "name": "isChild",
                "doc": "Boolean indicating if the first child cell should be selected."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectCell",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "isNext",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "isParent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "isChild",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3193,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects all children of the given parent cell or the children of the default parent if no parent is specified. To select leaf vertices and/or edges use `<selectCells>`.",
            "tags": [
              {
                "kind": "param",
                "name": "parent",
                "doc": "Optional `<mxCell>` whose children should be selected. Default is `<defaultParent>`."
              },
              {
                "kind": "param",
                "name": "descendants",
                "doc": "Optional boolean specifying whether all descendants should be selected. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectAll",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "descendants",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3200,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Select all vertices inside the given parent or the default parent."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectVertices",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3205,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Select all vertices inside the given parent or the default parent."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectVertices",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3210,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects all vertices and/or edges depending on the given boolean arguments recursively, starting at the given parent or the default parent if no parent is specified. Use `<selectAll>` to select all cells. For vertices, only cells with no children are selected.",
            "tags": [
              {
                "kind": "param",
                "name": "vertices",
                "doc": "Boolean indicating if vertices should be selected."
              },
              {
                "kind": "param",
                "name": "edges",
                "doc": "Boolean indicating if edges should be selected."
              },
              {
                "kind": "param",
                "name": "parent",
                "doc": "Optional `<mxCell>` that acts as the root of the recursion. Default is `<defaultParent>`."
              },
              {
                "kind": "param",
                "name": "selectGroups",
                "doc": "Optional boolean that specifies if groups should be selected. Default is false."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectCells",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "vertices",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "edges",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "parent",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "selectGroups",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3219,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects the given cell by either adding it to the selection or replacing the selection depending on whether the given mouse event is a toggle event.",
            "tags": [
              {
                "kind": "param",
                "name": "cell",
                "doc": "`<mxCell>` to be selected."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Optional mouseevent that triggered the selection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectCellForEvent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3226,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Selects the given cells by either adding them to the selection or replacing the selection depending on whether the given mouse event is a toggle event.",
            "tags": [
              {
                "kind": "param",
                "name": "cells",
                "doc": "Array of `<mxCells>` to be selected."
              },
              {
                "kind": "param",
                "name": "evt",
                "doc": "Optional mouseevent that triggered the selection."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "selectCellsForEvent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "cells",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3233,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Creates a new handler for the given cell state. This implementation returns a new `<mxEdgeHandler>` of the corresponding cell is an edge, otherwise it returns an `<mxVertexHandler>`.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` whose handler should be created."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createHandler",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3239,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hooks to create a new `<mxVertexHandler>` for the given `<mxCellState>`.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` to create the handler for."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createVertexHandler",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3245,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hooks to create a new `<mxEdgeHandler>` for the given `<mxCellState>`.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` to create the handler for."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createEdgeHandler",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3251,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hooks to create a new `<mxEdgeSegmentHandler>` for the given `<mxCellState>`.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` to create the handler for."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createEdgeSegmentHandler",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3257,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hooks to create a new `<mxElbowEdgeHandler>` for the given `<mxCellState>`.",
            "tags": [
              {
                "kind": "param",
                "name": "state",
                "doc": "`<mxCellState>` to create the handler for."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createElbowEdgeHandler",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "state",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3263,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Adds a listener to the graph event dispatch loop. The listener must implement the mouseDown, mouseMove and mouseUp methods as shown in the `<mxMouseEvent>` class.",
            "tags": [
              {
                "kind": "param",
                "name": "listener",
                "doc": "Listener to be added to the graph event listeners."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addMouseListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3269,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Removes the specified graph listener.",
            "tags": [
              {
                "kind": "param",
                "name": "listener",
                "doc": "Listener to be removed from the graph event listeners."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeMouseListener",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "listener",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3275,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Sets the graphX and graphY properties if the given `<mxMouseEvent>` if required and returned the event.",
            "tags": [
              {
                "kind": "param",
                "name": "me",
                "doc": "`<mxMouseEvent>` to be updated."
              },
              {
                "kind": "param",
                "name": "evtName",
                "doc": "Name of the mouse event."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "updateMouseEvent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "me",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "evtName",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3282,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the state for the given touch event."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getStateForEvent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3287,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the event should be ignored in `<fireMouseEvent>`."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEventIgnored",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3292,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Hook for ignoring synthetic mouse events after touchend in Firefox."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isSyntheticEventIgnored",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3297,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the event should be ignored in `<fireMouseEvent>`. This implementation returns true for select, option and input (if not of type checkbox, radio, button, submit or file) event sources if the event is not a mouse event or a left mouse button press event.",
            "tags": [
              {
                "kind": "param",
                "name": "evtName",
                "doc": "The name of the event."
              },
              {
                "kind": "param",
                "name": "me",
                "doc": "`<mxMouseEvent>` that should be ignored."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isEventSourceIgnored",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "evtName",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "me",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3304,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns the `<mxCellState>` to be used when firing the mouse event for the given state. This implementation returns the given state.",
            "tags": [
              {
                "kind": "param",
                "name": "mxCellState",
                "doc": "State whose event source should be returned."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getEventState",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "mxCellState",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3310,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Returns true if the given event should be ignored in the case of moultitouch events to just handle the pointer that started the gesture.",
            "tags": [
              {
                "kind": "param",
                "name": "evtName",
                "doc": "String that specifies the type of event to be dispatched."
              },
              {
                "kind": "param",
                "name": "me",
                "doc": "`<mxMouseEvent>` to be fired."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "isPointerEventIgnored",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "evtName",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "me",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3317,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Dispatches the given event in the graph event dispatch loop. Possible event names are `<mxEvent.MOUSE_DOWN>`, `<mxEvent.MOUSE_MOVE>` and `<mxEvent.MOUSE_UP>`. All listeners are invoked for all events regardless of the consumed state of the event.",
            "tags": [
              {
                "kind": "param",
                "name": "evtName",
                "doc": "String that specifies the type of event to be dispatched."
              },
              {
                "kind": "param",
                "name": "me",
                "doc": "`<mxMouseEvent>` to be fired."
              },
              {
                "kind": "param",
                "name": "sender",
                "doc": "Optional sender argument. Default is this."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fireMouseEvent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "evtName",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "me",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "sender",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3325,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Consumes the given `<mxMouseEvent>` if it's a touchStart event."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "consumeMouseEvent",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3330,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Dispatches a `<mxEvent.GESTURE>` event. The following example will resize the cell under the mouse based on the scale property of the native touch event.\n```\ngraph.addListener(mxEvent.GESTURE, function(sender, eo)\n{\n  var evt = eo.getProperty('event');\n  var state = graph.view.getState(eo.getProperty('cell'));\n  \n  if (graph.isEnabled() && graph.isCellResizable(state.cell) && Math.abs(1 - evt.scale) > 0.2)\n  {\n    var scale = graph.view.scale;\n    var tr = graph.view.translate;\n    \n    var w = state.width * evt.scale;\n    var h = state.height * evt.scale;\n    var x = state.x - (w - state.width) / 2;\n    var y = state.y - (h - state.height) / 2;\n    \n    var bounds = new mxRectangle(graph.snap(x / scale) - tr.x,\n    \t\tgraph.snap(y / scale) - tr.y, graph.snap(w / scale), graph.snap(h / scale));\n    graph.resizeCell(state.cell, bounds);\n    eo.consume();\n  }\n});\n```",
            "tags": [
              {
                "kind": "param",
                "name": "evt",
                "doc": "Gestureend event that represents the gesture."
              },
              {
                "kind": "param",
                "name": "cell",
                "doc": "Optional `<mxCell>` associated with the gesture."
              }
            ]
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "fireGestureEvent",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "evt",
                "optional": false
              },
              {
                "kind": "identifier",
                "name": "cell",
                "optional": false
              }
            ],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3360,
            "col": 2
          }
        },
        {
          "jsDoc": {
            "doc": "Destroys the graph and all its resources."
          },
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "destroy",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "any",
              "kind": "keyword",
              "keyword": "any"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Users/kmnao/OneDrive/%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88/GitHub/DrawIOHandler/files/sudo_mxGraph.ts",
            "line": 3365,
            "col": 2
          }
        }
      ],
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  }
]